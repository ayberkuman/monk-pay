{"version":3,"sources":["assets/images/avatar.svg","App/Layout/components/UserArea.js","App/Layout/Header.js"],"names":["UserArea","user","avatar","showProfilePopup","isProfilePopupOn","logout","profilePopupRef","lang","update","Dropdown","Toggle","variant","id","className","src","alt","fullName","Menu","Item","href","Header","globalRoutes","guestRoutes","authRoutes","state","createRef","e","preventDefault","setState","prevState","document","addEventListener","closeProfilePopup","target","current","removeEventListener","this","props","isLoggedIn","data-alt","location","pathname","login","links","headerTitle","Component","connect","dispatch","withRouter"],"mappings":"yMAAe,MAA0B,mC,2BCE5BA,EAAW,SAAC,GASlB,IARLC,EAQI,EARJA,KAOAC,GACI,EAPJC,iBAOI,EANJC,iBAMI,EALJC,OAKI,EAJJC,gBAII,EAHJC,KAGI,EAFJC,OAEI,EADJN,QAEA,OACE,eAACO,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,iBAAiBC,UAAU,yFAAjE,SACE,sBAAKA,UAAU,8DAAf,UACE,qBAAKA,UAAU,2FAAf,SACI,qBACEC,IAAKZ,EACLa,IAAI,cACJF,UAAU,uCAGhB,qBAAKA,UAAU,+CAAf,SACE,qBAAKA,UAAU,OAAf,SAAuBZ,EAAKe,kBAKlC,eAACP,EAAA,EAASQ,KAAV,WACE,cAACR,EAAA,EAASS,KAAV,CAAeC,KAAK,aAApB,oBACA,cAACV,EAAA,EAASS,KAAV,CAAeC,KAAK,aAApB,4BACA,cAACV,EAAA,EAASS,KAAV,CAAeC,KAAK,aAApB,mCCbFC,GANS,uCACVC,KACAC,KACAC,K,4MAIHC,MAAQ,CACNpB,kBAAkB,G,EAGpBE,gBAAkBmB,sB,EAElBtB,iBAAmB,SAACuB,GAClBA,EAAEC,iBAEF,EAAKC,UACH,SAACC,GACC,MAAO,CAAEzB,kBAAmByB,EAAUzB,qBAExC,WACE0B,SAASC,iBAAiB,QAAS,EAAKC,mBAAmB,O,EAKjEA,kBAAoB,SAACN,GACfA,EAAEO,SAAW,EAAK3B,gBAAgB4B,SACpC,EAAKN,SAAS,CAAExB,kBAAkB,IAAS,WACzC0B,SAASK,oBAAoB,QAAS,EAAKH,mBAAmB,O,uDAMlE,OAAOI,KAAKC,MAAMpC,KAAKqC,WACrB,qBACEzB,UAAU,SACV0B,WACEH,KAAKC,MAAMG,SAASC,WACpBnB,IAAYoB,MAAMC,MAAMP,KAAKC,MAAM9B,MAJvC,SAOE,sBAAKM,UAAU,MAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,mBAAGA,UAAU,MAAb,SAAoBuB,KAAKC,MAAMO,gBAEjC,qBAAK/B,UAAU,sDAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,cAAC,EAAD,CACEZ,KAAMmC,KAAKC,MAAMpC,KACjBG,iBAAkBgC,KAAKZ,MAAMpB,iBAC7BD,iBAAkBiC,KAAKjC,iBACvBE,OAAQ+B,KAAKC,MAAMhC,OACnBC,gBAAiB8B,KAAK9B,gBACtBC,KAAM6B,KAAKC,MAAM9B,KACjBC,OAAQ4B,KAAKC,MAAM7B,OACnBN,OAAQA,aAOlB,4B,GA1De2C,cAsENC,sBAAQ,MAPI,SAACC,GAC1B,MAAO,CACL1C,OAAQ,kBAAM0C,EAAS1C,gBACvBG,OAAQ,SAACP,GAAD,OAAU8C,EAASvC,YAAOP,QAIvB6C,CAAkCE,YAAW5B","file":"static/js/5.17dbe6a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.26bc99cf.svg\";","import React from \"react\";\nimport {Dropdown} from 'react-bootstrap'\nexport const UserArea = ({\n  user,\n  showProfilePopup,\n  isProfilePopupOn,\n  logout,\n  profilePopupRef,\n  lang,\n  update,\n  avatar\n}) => {\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className='bg-transparent p-0 border-0 d-flex justify-content-center align-items-center outline-0'>\n        <div className=\"user-area d-flex justify-content-between align-items-center\">\n          <div className=\"avatar rounded-circle d-flex justify-content-center align-items-center position-relative\">\n              <img\n                src={avatar}\n                alt=\"User avatar\"\n                className=\"rounded-circle position-relative\"\n              />\n          </div>\n          <div className=\"user-info d-flex flex-column align-items-end\">\n            <div className=\"name\">{user.fullName}</div>\n          </div>\n        </div>\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n        <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport avatar from '../../assets/images/avatar.svg'\n// import Logo from \"../../assets/images/logo.png\";\nimport { logout, update } from \"../../Auth/authActions\";\nimport {\n  authRoutes,\n  globalRoutes,\n  guestRoutes,\n} from \"../routes\";\nimport { UserArea } from \"./components/UserArea\";\n\nconst allRoutes = {\n  ...globalRoutes,\n  ...guestRoutes,\n  ...authRoutes,\n};\n\nclass Header extends Component {\n  state = {\n    isProfilePopupOn: false,\n  };\n\n  profilePopupRef = createRef();\n\n  showProfilePopup = (e) => {\n    e.preventDefault();\n\n    this.setState(\n      (prevState) => {\n        return { isProfilePopupOn: !prevState.isProfilePopupOn };\n      },\n      () => {\n        document.addEventListener(\"click\", this.closeProfilePopup, false);\n      }\n    );\n  };\n\n  closeProfilePopup = (e) => {\n    if (e.target !== this.profilePopupRef.current) {\n      this.setState({ isProfilePopupOn: false }, () => {\n        document.removeEventListener(\"click\", this.closeProfilePopup, false);\n      });\n    }\n  };\n\n  render() {\n    return this.props.user.isLoggedIn ? (\n      <div\n        className=\"header\"\n        data-alt={\n          this.props.location.pathname !==\n          guestRoutes.login.links[this.props.lang]\n        }\n      >\n        <div className=\"row\">\n          <div className=\"col-6 d-flex align-items-center\">\n            <p className='m-0'>{this.props.headerTitle}</p>\n          </div>\n          <div className=\"col-6 d-flex justify-content-end align-items-center\">\n            <span className=\"d-none d-md-flex\">\n              <UserArea\n                user={this.props.user}\n                isProfilePopupOn={this.state.isProfilePopupOn}\n                showProfilePopup={this.showProfilePopup}\n                logout={this.props.logout}\n                profilePopupRef={this.profilePopupRef}\n                lang={this.props.lang}\n                update={this.props.update}\n                avatar={avatar}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div></div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n    update: (user) => dispatch(update(user)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(Header));\n"],"sourceRoot":""}