[{"/Users/erdincmaden/Documents/Other/monk-medical-web/src/index.js":"1","/Users/erdincmaden/Documents/Other/monk-medical-web/src/ErrorBoundary.js":"2","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App.js":"3","/Users/erdincmaden/Documents/Other/monk-medical-web/src/store.js":"4","/Users/erdincmaden/Documents/Other/monk-medical-web/src/rootReducer.js":"5","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout.js":"6","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Router.js":"7","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appActions.js":"8","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/LanguageFiles.js":"9","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/API.js":"10","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/helper.js":"11","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authActions.js":"12","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/components/Alert.js":"13","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appReducer.js":"14","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/routes.js":"15","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authReducer.js":"16","/Users/erdincmaden/Documents/Other/monk-medical-web/src/NotFound/NotFound.js":"17","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/Header.js":"18","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/ForgotPassword.js":"19","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Home/Home.js":"20","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/components/UserArea.js":"21","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/Login.js":"22","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/InputWLabel.js":"23","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/components/LeftSide.js":"24","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/CutomCheckbox.js":"25","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Payments/Payments.js":"26","/Users/erdincmaden/Documents/Other/monk-medical-web/src/UserPayments/UserPayments.js":"27","/Users/erdincmaden/Documents/Other/monk-medical-web/src/PatientRegistry/PatientRegistry.js":"28","/Users/erdincmaden/Documents/Other/monk-medical-web/src/GetPaid/GetPaid.js":"29","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/SelectWLabel.js":"30"},{"size":892,"mtime":1610576010037,"results":"31","hashOfConfig":"32"},{"size":426,"mtime":1610034889211,"results":"33","hashOfConfig":"32"},{"size":5231,"mtime":1611347381467,"results":"34","hashOfConfig":"32"},{"size":323,"mtime":1610041609860,"results":"35","hashOfConfig":"32"},{"size":405,"mtime":1610035483102,"results":"36","hashOfConfig":"32"},{"size":3741,"mtime":1611256345312,"results":"37","hashOfConfig":"32"},{"size":3801,"mtime":1611258093807,"results":"38","hashOfConfig":"32"},{"size":450,"mtime":1611258433029,"results":"39","hashOfConfig":"32"},{"size":453,"mtime":1610223382980,"results":"40","hashOfConfig":"32"},{"size":212,"mtime":1611343803774,"results":"41","hashOfConfig":"32"},{"size":8583,"mtime":1611348712912,"results":"42","hashOfConfig":"32"},{"size":234,"mtime":1610216651179,"results":"43","hashOfConfig":"32"},{"size":3167,"mtime":1610035823406,"results":"44","hashOfConfig":"32"},{"size":1046,"mtime":1610818349425,"results":"45","hashOfConfig":"32"},{"size":2046,"mtime":1611346998334,"results":"46","hashOfConfig":"32"},{"size":874,"mtime":1610656702805,"results":"47","hashOfConfig":"32"},{"size":1386,"mtime":1610221638095,"results":"48","hashOfConfig":"32"},{"size":2395,"mtime":1610818636370,"results":"49","hashOfConfig":"32"},{"size":5077,"mtime":1610885187190,"results":"50","hashOfConfig":"32"},{"size":8480,"mtime":1611401583213,"results":"51","hashOfConfig":"32"},{"size":1238,"mtime":1611161636492,"results":"52","hashOfConfig":"32"},{"size":5638,"mtime":1611392342695,"results":"53","hashOfConfig":"32"},{"size":3952,"mtime":1611392634368,"results":"54","hashOfConfig":"32"},{"size":641,"mtime":1610557030096,"results":"55","hashOfConfig":"32"},{"size":785,"mtime":1610558021800,"results":"56","hashOfConfig":"32"},{"size":6407,"mtime":1611394057265,"results":"57","hashOfConfig":"32"},{"size":540,"mtime":1611356177335,"results":"58","hashOfConfig":"32"},{"size":6228,"mtime":1611347902920,"results":"59","hashOfConfig":"32"},{"size":6695,"mtime":1611264201157,"results":"60","hashOfConfig":"32"},{"size":2073,"mtime":1611263618463,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"15q6d9e",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},"/Users/erdincmaden/Documents/Other/monk-medical-web/src/index.js",[],["130","131"],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/ErrorBoundary.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App.js",["132"],"import React, { Component } from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { Helmet } from \"react-helmet-async\";\nimport { withLocalize } from \"react-localize-redux\";\nimport { locale } from \"moment\";\nimport \"moment/locale/tr\";\nimport Cookies from 'universal-cookie';\nimport { connect } from \"react-redux\";\n\nimport { Spinner } from 'react-bootstrap';\nimport global from \"./utils/i18n/global.json\";\n\nimport Layout from \"./App/Layout\";\n\nimport \"./assets/App.scss\";\nimport Router from \"./App/Router\";\nimport LanguageFiles from \"./utils/LanguageFiles\";\nimport is from \"is_js\";\nimport { withRouter } from \"react-router\";\nimport { handleErrors } from \"./utils/helper\";\nimport { login, logout } from \"./Auth/authActions\";\nimport { alert, resetAlert, headerTitleSet, pageLoadingSet } from \"./App/appActions\";\nimport Alert from \"./App/components/Alert\";\nimport API, { headers } from \"./utils/API\";\n\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    isAlertActive: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.props.initialize({\n      languages: [\n        { name: \"English\", code: \"en\" },\n        { name: \"Turkish\", code: \"tr\" },\n      ],\n      translation: global,\n      options: {\n        renderToStaticMarkup,\n        renderInnerHtml: true,\n        defaultLanguage: \"tr\",\n      },\n    });\n\n    locale(\"tr\");\n  }\n\n  url = process.env.REACT_APP_URL;\n\n  componentDidMount = async () => {\n    window.cookies = new Cookies();\n    setTimeout(() => this.setState({ isLoading: true }), 20);\n    this.props.setActiveLanguage(\"tr\");\n\n    const localUser = await window.cookies.get('user');\n    if (localUser && localUser.isLoggedIn) {\n      API.get(\"Account/WhoAmI\", {\n        headers: { ...headers, Authorization: `Bearer ${localUser.token}` },\n      })\n        .then((res) => {\n          const { data } = res;\n          const user = {\n            deviceId: localUser.deviceId,\n            fullName: data.user.fullName,\n            email: data.user.email,\n            token: localUser.token,\n          };\n\n          this.props.login(user);\n        })\n        .catch((err) => console.log(err));\n    }\n\n    setTimeout(() => this.setState({ isLoading: false }), 20);\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.alert) {\n      if (!prevProps.alert.isActive && this.props.alert.isActive) {\n        this.setState({ isAlertActive: true }, () => {\n          this.handleResetAlert();\n        });\n      }\n    }\n  };\n\n  alertTimeout = \"\";\n  handleResetAlert = (now = false) => {\n    let timeout = 0;\n    if (!now) timeout = parseInt(this.props.alert.timeout);\n\n    clearTimeout(this.alertTimeout);\n\n    this.alertTimeout = setTimeout(\n      () =>\n        this.setState({ isAlertActive: false }, () =>\n          setTimeout(this.props.resetAlert, 300)\n        ),\n      timeout\n    );\n  };\n\n  render() {\n    const lang = this.props.activeLanguage\n      ? this.props.activeLanguage.code\n      : this.props.defaultLanguage;\n\n    return this.state.isLoading ? (\n      ``\n    ) : (\n      <div className=\"App\">\n        <LanguageFiles />\n        <Helmet titleTemplate=\"%s | Monk Medical\" defaultTitle=\"Monk Medical\">\n          <html lang=\"tr\" />\n          <body is-touch-screen={is.touchDevice()} is-ie={is.ie()} />\n        </Helmet>\n        <Layout\n          lang={lang}\n          user={this.props.user}\n          translate={this.props.translate}\n          headerTitle={this.props.headerTitle}\n        >\n          {!this.state.isLoading && (\n            <Router\n              lang={lang}\n              url={this.url}\n              user={this.props.user}\n              translate={this.props.translate}\n              activeLanguage={this.props.activeLanguage}\n              defaultLanguage={this.props.defaultLanguage}\n              alert={this.props.alert}\n              showAlert={this.props.showAlert}\n              resetAlert={this.props.resetAlert}\n              headerTitleSet={this.props.headerTitleSet}\n              pageLoadingSet={this.props.pageLoadingSet}\n            />\n          )}\n        </Layout>\n        {this.state.isAlertActive && (\n          <Alert\n            type={this.props.alert.type}\n            title={this.props.alert.title}\n            content={this.props.alert.content}\n            resetAlert={this.handleResetAlert}\n          />\n        )}\n        {this.props.pageLoading && (\n          <div className=\"pageLoading\">\n            <Spinner animation=\"border\" variant=\"light\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    alert: state.app.alert,\n    pageLoading: state.app.pageLoading,\n    headerTitle: state.app.headerTitle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (user) => dispatch(login(user)),\n    logout: () => dispatch(logout()),\n    showAlert: (alertType, title, content, timeout) =>\n      dispatch(alert(alertType, title, content, timeout)),\n    resetAlert: () => dispatch(resetAlert()),\n    headerTitleSet: (title) => dispatch(headerTitleSet(title)),\n    pageLoadingSet: (type) => dispatch(pageLoadingSet(type))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withRouter(App)));\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/store.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/rootReducer.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout.js",["133","134","135","136","137"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from '../assets/images/payment-logo.svg'\nimport homeMenu from '../assets/images/home-menu.svg'\nimport homeMenuActive from '../assets/images/home-menu-active.svg'\nimport paymentsMenu from '../assets/images/payments-menu.svg'\nimport paymentsMenuActive from '../assets/images/payments-menu-active.svg'\nimport analysesMenu from '../assets/images/analyses-menu.svg'\nimport analysesMenuActive from '../assets/images/analyses-menu-active.svg'\nimport expensesMenu from '../assets/images/expenses-menu.svg'\nimport expensesMenuActive from '../assets/images/expenses-menu-active.svg'\nimport doctor_settingsMenu from '../assets/images/doctor_settings-menu.svg'\nimport doctor_settingsMenuActive from '../assets/images/doctor_settings-menu-active.svg'\nimport system_settingsMenu from '../assets/images/system_settings-menu.svg'\nimport system_settingsMenuActive from '../assets/images/system_settings-menu-active.svg'\nimport clinicMenu from '../assets/images/clinic-menu.svg'\nimport clinicMenuActive from '../assets/images/clinic-menu-active.svg'\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { authRoutes } from \"../App/routes\"\nconst Header = React.lazy(() => import(\"./Layout/Header\"));\nconst Layout = (props) => {\n  const {location} = props;\n  return (\n    <>\n      <div className='d-flex'>\n      {\n        props.user.isLoggedIn && <div className=\"left-side-menu min-vh-100\" id=\"sidebar-wrapper\">\n          <Link\n            to={authRoutes.home.links[props.lang]}\n          >\n            <img src={logo} alt={props.translate('payments')}/>\n          </Link>\n          <Link\n          className={location.pathname === '/' ? 'active' : ''}\n            to={authRoutes.home.links[props.lang]}\n          >\n            <img src={location.pathname === '/' ? homeMenuActive : homeMenu} alt={props.translate('home')}/>\n            {props.translate('home')}\n          </Link>\n          <Link\n            className={location.pathname.includes(authRoutes.payments.links[props.lang]) ? 'active' : ''}\n            to={authRoutes.payments.links[props.lang]}\n          >\n            <img src={location.pathname.includes(authRoutes.payments.links[props.lang]) ? paymentsMenuActive : paymentsMenu} alt={props.translate('payments')}/>\n            {props.translate('payments')}\n          </Link>\n          <Link\n          >\n            <img src={analysesMenu} alt={props.translate('analyses')}/>\n            {props.translate('analyses')}\n          </Link>\n          <Link\n          >\n            <img src={expensesMenu} alt={props.translate('expenses')}/>\n            {props.translate('expenses')}\n          </Link>\n          <Link\n          className='border-top'\n          >\n            <img src={doctor_settingsMenu} alt={props.translate('doctor_settings')}/>\n            {props.translate('doctor_settings')}\n          </Link>\n          \n          <Link\n          className='border-top'\n          >\n            <img src={system_settingsMenu} alt={props.translate('system_settings')}/>\n            {props.translate('system_settings')}\n          </Link>\n          <hr/>\n          <Link\n          >\n            <img src={clinicMenu} alt={props.translate('clinic')}/>\n            {props.translate('clinic')}\n          </Link>\n        \n      </div>\n      }\n        <div  className='container-fluid'>\n          <Header\n            lang={props.lang}\n            user={props.user}\n            location={props.location}\n            translate={props.translate}\n            headerTitle={props.headerTitle}\n          />\n          <div id=\"main\">{props.children}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default connect()(withRouter(Layout));\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Router.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appActions.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/LanguageFiles.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/API.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/helper.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authActions.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/components/Alert.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appReducer.js",["138"],"import { alert } from \"./appActions\";\n\nconst initState = {\n  alert: {\n    type: \"\",\n    content: \"\",\n    timeout: 0,\n    isActive: false,\n  },\n  connection: \"\",\n  pageLoading: false,\n  headerTitle: ''\n};\n\nconst appReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"ALERT\": {\n      const alert = {\n        type: action.alertType,\n        title: action.title,\n        content: action.content,\n        timeout: action.timeout,\n        isActive: true,\n      };\n\n      const app = { ...state, alert };\n\n      return { ...app };\n    }\n\n    case \"RESET_ALERT\": {\n      const alert = {\n        type: \"\",\n        title: \"\",\n        content: \"\",\n        timeout: 0,\n        isActive: false,\n      };\n\n      const app = { ...state, alert };\n\n      return { ...app };\n    }\n\n    case 'PAGE_LOADING': {\n      return { ...state, pageLoading: action.pageLoading } \n    }\n\n    case 'HEADER_TITLE': {\n      return { ...state, headerTitle: action.headerTitle } \n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/routes.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authReducer.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/NotFound/NotFound.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/Header.js",["139"],"import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport avatar from '../../assets/images/avatar.svg'\n// import Logo from \"../../assets/images/logo.png\";\nimport { logout, update } from \"../../Auth/authActions\";\nimport {\n  authRoutes,\n  globalRoutes,\n  guestRoutes,\n} from \"../routes\";\nimport { UserArea } from \"./components/UserArea\";\n\nconst allRoutes = {\n  ...globalRoutes,\n  ...guestRoutes,\n  ...authRoutes,\n};\n\nclass Header extends Component {\n  state = {\n    isProfilePopupOn: false,\n  };\n\n  profilePopupRef = createRef();\n\n  showProfilePopup = (e) => {\n    e.preventDefault();\n\n    this.setState(\n      (prevState) => {\n        return { isProfilePopupOn: !prevState.isProfilePopupOn };\n      },\n      () => {\n        document.addEventListener(\"click\", this.closeProfilePopup, false);\n      }\n    );\n  };\n\n  closeProfilePopup = (e) => {\n    if (e.target !== this.profilePopupRef.current) {\n      this.setState({ isProfilePopupOn: false }, () => {\n        document.removeEventListener(\"click\", this.closeProfilePopup, false);\n      });\n    }\n  };\n\n  render() {\n    return this.props.user.isLoggedIn ? (\n      <div\n        className=\"header\"\n        data-alt={\n          this.props.location.pathname !==\n          guestRoutes.login.links[this.props.lang]\n        }\n      >\n        <div className=\"row\">\n          <div className=\"col-6 d-flex align-items-center\">\n            <p className='m-0'>{this.props.headerTitle}</p>\n          </div>\n          <div className=\"col-6 d-flex justify-content-end align-items-center\">\n            <span className=\"d-none d-md-flex\">\n              <UserArea\n                user={this.props.user}\n                isProfilePopupOn={this.state.isProfilePopupOn}\n                showProfilePopup={this.showProfilePopup}\n                logout={this.props.logout}\n                profilePopupRef={this.profilePopupRef}\n                lang={this.props.lang}\n                update={this.props.update}\n                avatar={avatar}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div></div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n    update: (user) => dispatch(update(user)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(Header));\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/ForgotPassword.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Home/Home.js",["140","141","142"],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/components/UserArea.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/Login.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/InputWLabel.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/components/LeftSide.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/CutomCheckbox.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Payments/Payments.js",["143","144"],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/UserPayments/UserPayments.js",["145","146","147","148"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { headerTitleSet } from \"../App/appActions\";\nimport { scrollToTop } from \"../utils/helper\";\nimport InputWLabel from \"../utils/components/InputWLabel\";\n\nexport class UserPayments extends Component {\n  componentDidMount = () => {\n    scrollToTop();\n    console.log(this.props);\n  };\n\n  render() {\n    return (\n      <div className=\"Payments\">\n        asdasd\n      </div>\n    );\n  }\n}\n\nexport default UserPayments\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/PatientRegistry/PatientRegistry.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/GetPaid/GetPaid.js",["149"],"import React, { Component } from \"react\";\nimport _ from 'lodash';\nimport InputWLabel from \"../utils/components/InputWLabel\";\nimport SelectWLabel from \"../utils/components/SelectWLabel\";\nimport { scrollToTop } from \"../utils/helper\";\nimport API, { headers } from \"../utils/API\";\nexport class GetPaid extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      selectedProcess:'',\n      tckn: '',\n      nameSurname: '',\n      eMail: '',\n      phoneNumber: '',\n      address: '',\n    }\n  }\n\n  componentDidMount = () => {\n    scrollToTop();\n    this.props.headerTitleSet(this.props.translate('payments'));\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this._loadRowsTimeout)\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value }, () => {\n      setTimeout(this.handleCheck, 20);\n    });\n  };\n  handleCheck = () => {\n  };\n  postData = (redirect) =>{\n    this.props.pageLoadingSet(true);\n    const { tckn, nameSurname, eMail, phoneNumber, address } = this.state;\n    const data = {\n      createdUser: {\n        id: tckn,\n        normalizedUserName: \"string\",\n        email: eMail,\n        phoneNumber,\n        fullName: nameSurname,\n        address\n      },\n    };\n    console.log('00000');\n    API.post(\"Payment\", data, { headers: { ...headers, Authorization: `Bearer ${this.props.user.token}` } })\n      .then((res) => {\n        this.props.pageLoadingSet(false);\n        console.log(1);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(2);\n        console.log(err);\n        this.props.pageLoadingSet(false);\n      });\n  }\n  save = ()=>{\n    this.postData();\n  }\n  saveAndPay = ()=>{\n    this.postData('pay');\n  }\n  render() {\n    return (\n      <div className=\"Payments\">\n        <div className=\"row  mt-5\">\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-8\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-2\">\n                <div className=\"top-item select-box\">\n                  <SelectWLabel\n                    name=\"selectedProcess\"\n                    id=\"selectedProcess\"\n                    label=\"Tedavi Adı\"\n                    value={String(this.state.selectedProcess)}\n                    setValue={e =>\n                      this.setState({ selectedProcess: e[0].label })\n                    }\n                    placeholder='Tedavi Adı'\n                    options={[{\n                      label: 'Alabama',\n                      population: 4780127,\n                      capital: 'Montgomery',\n                      region: 'South',\n                    },\n                    { label: 'Alaska', population: 710249, capital: 'Juneau', region: 'West' },\n                    { label: 'Arizona', population: 6392307, capital: 'Phoenix', region: 'West' },\n                    {\n                      label: 'Arkansas',\n                      population: 2915958,\n                      capital: 'Little Rock',\n                      region: 'South',\n                    }]}\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-md-6 mt-2\">\n                <InputWLabel\n                  type=\"text\"\n                  name=\"nameSurname\"\n                  id=\"nameSurname\"\n                  label=\"Ad Soyad\"\n                  placeholder=\"Ad Soyad\"\n                  value={this.state.nameSurname}\n                  setValue={this.handleChange}\n                  inputRef={this.nameSurnameRef}\n                  tabIndex={1}\n                  errorMessage={this.state.errorMessage}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-2\">\n                <InputWLabel\n                  type=\"email\"\n                  name=\"eMail\"\n                  id=\"eMail\"\n                  label=\"E-posta\"\n                  placeholder=\"E-posta\"\n                  value={this.state.eMail}\n                  setValue={this.handleChange}\n                  inputRef={this.eMailRef}\n                  tabIndex={1}\n                  errorMessage={this.state.errorMessage}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-2\">\n                <InputWLabel\n                  type=\"phone\"\n                  name=\"phoneNumber\"\n                  id=\"phoneNumber\"\n                  label=\"Telefon\"\n                  placeholder=\"Telefon\"\n                  value={this.state.phoneNumber}\n                  setValue={this.handleChange}\n                  inputRef={this.phoneNumberRef}\n                  tabIndex={1}\n                  errorMessage={this.state.errorMessage}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-2\">\n                <InputWLabel\n                  type=\"text\"\n                  name=\"address\"\n                  id=\"address\"\n                  label=\"Adres\"\n                  placeholder=\"Adres\"\n                  value={this.state.address}\n                  setValue={this.handleChange}\n                  inputRef={this.addressRef}\n                  tabIndex={1}\n                  errorMessage={this.state.errorMessage}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <hr className=\"mt-0 mb-4\"></hr>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-2\">\n                <InputWLabel\n                  type=\"text\"\n                  name=\"address\"\n                  id=\"address\"\n                  label=\"Adres\"\n                  placeholder=\"Adres\"\n                  value={this.state.address}\n                  setValue={this.handleChange}\n                  inputRef={this.addressRef}\n                  tabIndex={1}\n                  errorMessage={this.state.errorMessage}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <button\n                  className=\"primary-button d-inline-flex\"\n                  onClick={() => this.save()}\n                >\n                  Onayla\n                </button>\n                <button\n                  className=\"primary-white-button d-inline-flex ml-4\"\n                  onClick={() => this.saveAndPay()}\n                >\n                  Onayla ve Ödeme Al\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GetPaid\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/SelectWLabel.js",["150"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport crypto from \"crypto\";\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { validateInput } from \"../helper\";\n\nexport default class SelectWLabel extends Component {\n  state = {\n    isFilled: false,\n    isActive: false,\n  };\n\n  id = crypto.randomBytes(6).toString(\"hex\");\n\n  componentDidMount = () => {\n    if (this.props.value) this.setState({ isFilled: true }, this.handleFocus);\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (!prevProps.value && this.props.value && !this.state.isFilled)\n      this.setState({ isFilled: true }, this.handleFocus);\n  };\n\n  handleFocus = () =>\n    document.getElementById(`input-${this.id}`).classList.add(\"focused\");\n\n  handleBlur = (e) => {\n    if (this.props.validate)\n      if (!validateInput(this.props.type, e.target.value)) {\n        e.target.value = \"\";\n        this.props.setValue(e);\n      }\n\n    if (e.target.value === \"\" || e.target.value === \"empty-placeholder-value\")\n      document.getElementById(`input-${this.id}`).classList.remove(\"focused\");\n  };\n\n  render() {\n    return (\n      <div\n        className={`SelectWLabel position-relative d-flex justify-content-start align-items-center ${\n          this.props.classes ? this.props.classes : ``\n        }`}\n        id={`input-${this.id}`}\n        data-move-label={this.state.isFilled || this.state.isActive}\n        data-w-icon={\"icon\" in this.props}\n        data-label={this.props.label}\n      >\n        {this.props.icon ? (\n          <div className=\"icon d-flex justify-content-center align-items-center\">\n            {this.props.icon}\n          </div>\n        ) : (\n          \"\"\n        )}\n        <Typeahead\n          id={this.props.id}\n          // onChange={this.props.setValue}\n          options={this.props.options}\n          placeholder={this.props.placeholder}\n          selected={this.props.value}\n        />\n        <label className='position-absolute'>{this.props.label}</label>\n      </div>\n    );\n  }\n}\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":20,"column":10,"nodeType":"157","messageId":"158","endLine":20,"endColumn":22},{"ruleId":"155","severity":1,"message":"159","line":9,"column":8,"nodeType":"157","messageId":"158","endLine":9,"endColumn":26},{"ruleId":"155","severity":1,"message":"160","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":26},{"ruleId":"155","severity":1,"message":"161","line":13,"column":8,"nodeType":"157","messageId":"158","endLine":13,"endColumn":33},{"ruleId":"155","severity":1,"message":"162","line":15,"column":8,"nodeType":"157","messageId":"158","endLine":15,"endColumn":33},{"ruleId":"155","severity":1,"message":"163","line":17,"column":8,"nodeType":"157","messageId":"158","endLine":17,"endColumn":24},{"ruleId":"155","severity":1,"message":"164","line":1,"column":10,"nodeType":"157","messageId":"158","endLine":1,"endColumn":15},{"ruleId":"155","severity":1,"message":"165","line":14,"column":7,"nodeType":"157","messageId":"158","endLine":14,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":155,"column":19,"nodeType":"168","endLine":161,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":164,"column":19,"nodeType":"168","endLine":170,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":173,"column":19,"nodeType":"168","endLine":179,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":45,"column":25,"nodeType":"171","messageId":"172","endLine":45,"endColumn":27},{"ruleId":"155","severity":1,"message":"173","line":67,"column":13,"nodeType":"157","messageId":"158","endLine":67,"endColumn":17},{"ruleId":"155","severity":1,"message":"174","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":17},{"ruleId":"155","severity":1,"message":"175","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":14},{"ruleId":"155","severity":1,"message":"176","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":24},{"ruleId":"155","severity":1,"message":"177","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":19},{"ruleId":"155","severity":1,"message":"178","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":9},{"ruleId":"155","severity":1,"message":"179","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":17},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'handleErrors' is defined but never used.","Identifier","unusedVar","'analysesMenuActive' is defined but never used.","'expensesMenuActive' is defined but never used.","'doctor_settingsMenuActive' is defined but never used.","'system_settingsMenuActive' is defined but never used.","'clinicMenuActive' is defined but never used.","'alert' is defined but never used.","'allRoutes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'name' is assigned a value but never used.","'connect' is defined but never used.","'Link' is defined but never used.","'headerTitleSet' is defined but never used.","'InputWLabel' is defined but never used.","'_' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]