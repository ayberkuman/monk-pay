[{"C:\\Users\\user\\Desktop\\monk-pay\\src\\index.js":"1","C:\\Users\\user\\Desktop\\monk-pay\\src\\ErrorBoundary.js":"2","C:\\Users\\user\\Desktop\\monk-pay\\src\\store.js":"3","C:\\Users\\user\\Desktop\\monk-pay\\src\\App.js":"4","C:\\Users\\user\\Desktop\\monk-pay\\src\\rootReducer.js":"5","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\API.js":"6","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\appActions.js":"7","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Router.js":"8","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Layout.js":"9","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\LanguageFiles.js":"10","C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\authActions.js":"11","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\components\\Alert.js":"12","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\appReducer.js":"13","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\routes.js":"14","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Layout\\Header.js":"15","C:\\Users\\user\\Desktop\\monk-pay\\src\\Analysis\\Analysis.js":"16","C:\\Users\\user\\Desktop\\monk-pay\\src\\Expense\\Expense.js":"17","C:\\Users\\user\\Desktop\\monk-pay\\src\\UserDetail\\UserDetail.js":"18","C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\pages\\Login.js":"19","C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\pages\\ForgotPassword.js":"20","C:\\Users\\user\\Desktop\\monk-pay\\src\\CreatePatient\\CreatePatient.js":"21","C:\\Users\\user\\Desktop\\monk-pay\\src\\NotFound\\NotFound.js":"22","C:\\Users\\user\\Desktop\\monk-pay\\src\\CreatePaid\\CreatePaid.js":"23","C:\\Users\\user\\Desktop\\monk-pay\\src\\Payments\\Payments.js":"24","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Layout\\components\\UserArea.js":"25","C:\\Users\\user\\Desktop\\monk-pay\\src\\Home\\Home.js":"26","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\helper.js":"27","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\components\\SelectWLabel.js":"28","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\components\\InputWLabel.js":"29","C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\pages\\components\\LeftSide.js":"30","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\components\\CutomCheckbox.js":"31","C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\authReducer.js":"32"},{"size":1040,"mtime":1643720944880,"results":"33","hashOfConfig":"34"},{"size":444,"mtime":1643720944860,"results":"35","hashOfConfig":"34"},{"size":330,"mtime":1643720944881,"results":"36","hashOfConfig":"34"},{"size":5590,"mtime":1643720944851,"results":"37","hashOfConfig":"34"},{"size":419,"mtime":1643720944881,"results":"38","hashOfConfig":"34"},{"size":251,"mtime":1643720944882,"results":"39","hashOfConfig":"34"},{"size":477,"mtime":1643720944854,"results":"40","hashOfConfig":"34"},{"size":3948,"mtime":1643720944853,"results":"41","hashOfConfig":"34"},{"size":5616,"mtime":1643720944852,"results":"42","hashOfConfig":"34"},{"size":472,"mtime":1643720944882,"results":"43","hashOfConfig":"34"},{"size":252,"mtime":1643720944855,"results":"44","hashOfConfig":"34"},{"size":3237,"mtime":1643720944854,"results":"45","hashOfConfig":"34"},{"size":1104,"mtime":1643720944854,"results":"46","hashOfConfig":"34"},{"size":3315,"mtime":1643720944855,"results":"47","hashOfConfig":"34"},{"size":2432,"mtime":1643720944852,"results":"48","hashOfConfig":"34"},{"size":6275,"mtime":1643720944850,"results":"49","hashOfConfig":"34"},{"size":15022,"mtime":1643982507159,"results":"50","hashOfConfig":"34"},{"size":13143,"mtime":1643982507163,"results":"51","hashOfConfig":"34"},{"size":6477,"mtime":1643720944857,"results":"52","hashOfConfig":"34"},{"size":4853,"mtime":1643720944857,"results":"53","hashOfConfig":"34"},{"size":8608,"mtime":1643982922089,"results":"54","hashOfConfig":"34"},{"size":1430,"mtime":1643720944862,"results":"55","hashOfConfig":"34"},{"size":24426,"mtime":1643720944859,"results":"56","hashOfConfig":"34"},{"size":8854,"mtime":1643982507161,"results":"57","hashOfConfig":"34"},{"size":1143,"mtime":1643720944853,"results":"58","hashOfConfig":"34"},{"size":9976,"mtime":1643720944861,"results":"59","hashOfConfig":"34"},{"size":1937,"mtime":1643720944886,"results":"60","hashOfConfig":"34"},{"size":2336,"mtime":1643720944884,"results":"61","hashOfConfig":"34"},{"size":4051,"mtime":1643720944883,"results":"62","hashOfConfig":"34"},{"size":955,"mtime":1643720944858,"results":"63","hashOfConfig":"34"},{"size":815,"mtime":1643720944882,"results":"64","hashOfConfig":"34"},{"size":1038,"mtime":1643720944856,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1rhpc3a",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\user\\Desktop\\monk-pay\\src\\index.js",[],["138","139"],"C:\\Users\\user\\Desktop\\monk-pay\\src\\ErrorBoundary.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\store.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\rootReducer.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\API.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\appActions.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Router.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Layout.js",["140","141","142"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from '../assets/images/payment-logo.png'\r\nimport homeMenu from '../assets/images/home-menu.svg'\r\nimport homeMenuActive from '../assets/images/home-menu-active.svg'\r\nimport paymentsMenu from '../assets/images/payments-menu.svg'\r\nimport paymentsMenuActive from '../assets/images/payments-menu-active.svg'\r\nimport analysesMenu from '../assets/images/analyses-menu.svg'\r\nimport analysesMenuActive from '../assets/images/analyses-menu-active.svg'\r\nimport expensesMenu from '../assets/images/expenses-menu.svg'\r\nimport expensesMenuActive from '../assets/images/expenses-menu-active.svg'\r\nimport doctor_settingsMenu from '../assets/images/doctor_settings-menu.svg'\r\nimport doctor_settingsMenuActive from '../assets/images/doctor_settings-menu-active.svg'\r\nimport system_settingsMenu from '../assets/images/system_settings-menu.svg'\r\nimport system_settingsMenuActive from '../assets/images/system_settings-menu-active.svg'\r\nimport clinicMenu from '../assets/images/clinic-menu.svg'\r\nimport clinicMenuActive from '../assets/images/clinic-menu-active.svg'\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { authRoutes } from \"../App/routes\"\r\nconst Header = React.lazy(() => import(\"./Layout/Header\"));\r\nconst Layout = (props) => {\r\n  const {location} = props;\r\n  return (\r\n    <>\r\n      <div className=\"d-flex\">\r\n        {props.user.isLoggedIn && (\r\n          <div className=\"left-side-menu min-vh-100\" id=\"sidebar-wrapper\">\r\n            <Link to={authRoutes.home.links[props.lang]}>\r\n              <img src={logo} width={46} alt={props.translate(\"payments\")} />\r\n            </Link>\r\n            <Link\r\n              className={location.pathname === \"/\" ? \"active\" : \"\"}\r\n              to={authRoutes.home.links[props.lang]}\r\n            >\r\n              <img\r\n                className='mh-24'\r\n                src={location.pathname === \"/\" ? homeMenuActive : homeMenu}\r\n                alt={props.translate(\"home\")}\r\n              />\r\n              {props.translate(\"home\")}\r\n            </Link>\r\n            <Link\r\n              className={\r\n                location.pathname.includes(\r\n                  authRoutes.payments.links[props.lang]\r\n                )\r\n                  ? \"active\"\r\n                  : \"\"\r\n              }\r\n              to={authRoutes.payments.links[props.lang]}\r\n            >\r\n              <img\r\n                className='mh-24'\r\n                src={\r\n                  location.pathname.includes(\r\n                    authRoutes.payments.links[props.lang]\r\n                  )\r\n                    ? paymentsMenuActive\r\n                    : paymentsMenu\r\n                }\r\n                alt={props.translate(\"payments\")}\r\n              />\r\n              {props.translate(\"payments\")}\r\n            </Link>\r\n            <Link \r\n              className={\r\n                location.pathname.includes(\r\n                  authRoutes.analysis.links[props.lang]\r\n                )\r\n                  ? \"active\"\r\n                  : \"\"\r\n              }\r\n              to={authRoutes.analysis.links[props.lang]}>\r\n              <img \r\n                className='mh-24'\r\n                src={\r\n                  location.pathname.includes(\r\n                    authRoutes.analysis.links[props.lang]\r\n                  )\r\n                    ? analysesMenuActive\r\n                    : analysesMenu\r\n                }\r\n                alt={props.translate(\"analyses\")} />\r\n              {props.translate(\"analyses\")}\r\n            </Link>\r\n            <Link \r\n              className={\r\n                location.pathname.includes(\r\n                  authRoutes.expense.links[props.lang]\r\n                )\r\n                  ? \"active\"\r\n                  : \"\"\r\n              }\r\n              to={authRoutes.expense.links[props.lang]}>\r\n              <img \r\n                className='mh-24'\r\n                src={\r\n                  location.pathname.includes(\r\n                    authRoutes.expense.links[props.lang]\r\n                  )\r\n                    ? expensesMenuActive\r\n                    : expensesMenu\r\n                }\r\n                alt={props.translate(\"expenses\")} />\r\n              {props.translate(\"expenses\")}\r\n            </Link>\r\n            <a className=\"border-top\" href=\"https://app.monkmedical.com/doktor-ayarlari\">\r\n              <img\r\n                className='mh-24'\r\n                src={doctor_settingsMenu}\r\n                alt={props.translate(\"doctor_settings\")}\r\n              />\r\n              {props.translate(\"doctor_settings\")}\r\n            </a>\r\n\r\n            <a href='https://app.monkmedical.com/sistem-ayarlari'>\r\n              <img\r\n                className='mh-24'\r\n                src={system_settingsMenu}\r\n                alt={props.translate(\"system_settings\")}\r\n              />\r\n              {props.translate(\"system_settings\")}\r\n            </a>\r\n            <hr />\r\n            <a href='https://app.monkmedical.com/'>\r\n              <img className='mh-18' src={clinicMenu} alt={props.translate(\"clinic\")} />\r\n              {props.translate(\"clinic\")}\r\n            </a>\r\n          </div>\r\n        )}\r\n        <div className=\"container-fluid\">\r\n          <Header\r\n            lang={props.lang}\r\n            user={props.user}\r\n            location={props.location}\r\n            translate={props.translate}\r\n            headerTitle={props.headerTitle}\r\n          />\r\n          <div id=\"main\">{props.children}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect()(withRouter(Layout));\r\n","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\LanguageFiles.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\authActions.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\components\\Alert.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\appReducer.js",["143"],"import { alert } from \"./appActions\";\r\n\r\nconst initState = {\r\n  alert: {\r\n    type: \"\",\r\n    content: \"\",\r\n    timeout: 0,\r\n    isActive: false,\r\n  },\r\n  connection: \"\",\r\n  pageLoading: false,\r\n  headerTitle: ''\r\n};\r\n\r\nconst appReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"ALERT\": {\r\n      const alert = {\r\n        type: action.alertType,\r\n        title: action.title,\r\n        content: action.content,\r\n        timeout: action.timeout,\r\n        isActive: true,\r\n      };\r\n\r\n      const app = { ...state, alert };\r\n\r\n      return { ...app };\r\n    }\r\n\r\n    case \"RESET_ALERT\": {\r\n      const alert = {\r\n        type: \"\",\r\n        title: \"\",\r\n        content: \"\",\r\n        timeout: 0,\r\n        isActive: false,\r\n      };\r\n\r\n      const app = { ...state, alert };\r\n\r\n      return { ...app };\r\n    }\r\n\r\n    case 'PAGE_LOADING': {\r\n      return { ...state, pageLoading: action.pageLoading } \r\n    }\r\n\r\n    case 'HEADER_TITLE': {\r\n      return { ...state, headerTitle: action.headerTitle } \r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\routes.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Layout\\Header.js",["144"],"import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport avatar from '../../assets/images/avatar.svg'\r\nimport { logout, update } from \"../../Auth/authActions\";\r\nimport {\r\n  authRoutes,\r\n  globalRoutes,\r\n  guestRoutes,\r\n} from \"../routes\";\r\nimport { UserArea } from \"./components/UserArea\";\r\n\r\nconst allRoutes = {\r\n  ...globalRoutes,\r\n  ...guestRoutes,\r\n  ...authRoutes,\r\n};\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    isProfilePopupOn: false,\r\n  };\r\n\r\n  profilePopupRef = createRef();\r\n\r\n  showProfilePopup = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState(\r\n      (prevState) => {\r\n        return { isProfilePopupOn: !prevState.isProfilePopupOn };\r\n      },\r\n      () => {\r\n        document.addEventListener(\"click\", this.closeProfilePopup, false);\r\n      }\r\n    );\r\n  };\r\n\r\n  closeProfilePopup = (e) => {\r\n    if (e.target !== this.profilePopupRef.current) {\r\n      this.setState({ isProfilePopupOn: false }, () => {\r\n        document.removeEventListener(\"click\", this.closeProfilePopup, false);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.props.user.isLoggedIn ? (\r\n      <div\r\n        className=\"header\"\r\n        data-alt={\r\n          this.props.location.pathname !==\r\n          guestRoutes.login.links[this.props.lang]\r\n        }\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-6 d-flex align-items-center\">\r\n            <p className='m-0'>{this.props.headerTitle}</p>\r\n          </div>\r\n          <div className=\"col-6 d-flex justify-content-end align-items-center\">\r\n            <span className=\"d-none d-md-flex\">\r\n              <UserArea\r\n                user={this.props.user}\r\n                isProfilePopupOn={this.state.isProfilePopupOn}\r\n                showProfilePopup={this.showProfilePopup}\r\n                logout={this.props.logout}\r\n                profilePopupRef={this.profilePopupRef}\r\n                lang={this.props.lang}\r\n                update={this.props.update}\r\n                avatar={avatar}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n    update: (user) => dispatch(update(user)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Header));\r\n","C:\\Users\\user\\Desktop\\monk-pay\\src\\Analysis\\Analysis.js",["145","146","147","148"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from 'lodash'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport API, { headers } from \"../utils/API\";\r\nimport { scrollToTop, currency, formatMoney } from \"../utils/helper\";\r\nimport InputWLabel from \"../utils/components/InputWLabel\";\r\n\r\nexport class Expense extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      processRows: [],\r\n      doctorRows: [],\r\n      startDate: '',\r\n      endDate: '',\r\n    }\r\n  }\r\n\r\n  \r\n  componentDidMount = () => {\r\n    scrollToTop();\r\n    setTimeout(() => {\r\n      this.props.headerTitleSet(this.props.translate('analyses'));\r\n    }, 400);\r\n    this.getData()\r\n  };\r\n\r\n  getData = ()=>{\r\n    // this.props.pageLoadingSet(true);\r\n    const startDate = this.state.startDate !== '' ? moment(this.state.startDate).format('YYYY-MM-DD') : ''\r\n    const endDate = this.state.endDate !== '' ? moment(this.state.endDate).format('YYYY-MM-DD') : ''\r\n    API.get(`/Dashboard/Analysis?startDate=${startDate}&endDate=${endDate}`, {\r\n      headers: { ...headers, Authorization: `Bearer ${this.props.user.token}`},\r\n    })\r\n      .then((res) => {\r\n        // this.props.pageLoadingSet(false);\r\n        const { data } = res;\r\n        this.setState({\r\n          processRows: data.processAnalyses,\r\n          doctorRows: data.doctorAnalyses\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        // this.props.pageLoadingSet(false);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Payments\">\r\n        <div className=\"align-items-center justify-content-between mt-4 mb-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <DatePicker\r\n                selected={this.state.startDate}\r\n                onChange={(startDate) => {\r\n                  this.setState(\r\n                    {\r\n                      startDate: _.isNull(startDate) ? '' : startDate,\r\n                    },\r\n                    () => {\r\n                      this.getData();\r\n                    }\r\n                  );\r\n                }}\r\n                placeholderText=\"Başlangıç Tarihi\"\r\n                className=\"w-100 min\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <DatePicker\r\n                selected={this.state.endDate}\r\n                onChange={(endDate) => {\r\n                  this.setState(\r\n                    {\r\n                      endDate: _.isNull(endDate) ? '' : endDate,\r\n                    },\r\n                    () => {\r\n                      this.getData();\r\n                    }\r\n                  );\r\n                }}\r\n                placeholderText=\"Bitiş Tarihi\"\r\n                className=\"w-100 min\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"react-infinite-table react-infinite-table-fill example-table rounded table-bordered \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <h3 className=\"w-100 p-3 pt-4\">Tedavilere Göre</h3>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <table className=\"table table-striped\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"react-infinite-table-col-0\">\r\n                            Tedavi Adı\r\n                          </th>\r\n                          <th className=\"react-infinite-table-col-1 text-right\">\r\n                            Ciro\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.processRows.map((i, index) => (\r\n                          <tr key={index + \"a\"} id={\"rowElement\" + i.processId}>\r\n                            <td className=\"react-infinite-table-col-0 pt-3 pb-3\">\r\n                              {i.process.name}\r\n                            </td>\r\n                            <td className=\"react-infinite-table-col-0 pt-3 pb-3 text-right\">\r\n                              {i.amount} TL\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"react-infinite-table react-infinite-table-fill example-table rounded table-bordered \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <h3 className=\"w-100 p-3 pt-4\">Doktora Göre</h3>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <table className=\"table table-striped\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"react-infinite-table-col-0\">\r\n                            Doktor Adı\r\n                          </th>\r\n                          <th className=\"react-infinite-table-col-1 text-right\">\r\n                            Ciro\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.doctorRows.map((i, index) => (\r\n                          <tr key={index + \"a\"} id={\"rowElement\" + i.doctorId}>\r\n                            <td className=\"react-infinite-table-col-0 pt-3 pb-3\">\r\n                              {i.doctor.fullName}\r\n                            </td>\r\n                            <td className=\"react-infinite-table-col-0 pt-3 pb-3 text-right\">\r\n                              {i.amount} TL\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Expense\r\n","C:\\Users\\user\\Desktop\\monk-pay\\src\\Expense\\Expense.js",["149","150","151","152"],"C:\\Users\\user\\Desktop\\monk-pay\\src\\UserDetail\\UserDetail.js",["153"],"C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\pages\\Login.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\pages\\ForgotPassword.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\CreatePatient\\CreatePatient.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\NotFound\\NotFound.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\CreatePaid\\CreatePaid.js",["154","155"],"import _ from 'lodash';\r\nimport moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport React, { Component } from \"react\";\r\nimport { alert } from \"../App/appActions\";\r\nimport { authRoutes } from \"../App/routes\";\r\nimport API, { headers } from \"../utils/API\";\r\nimport InputWLabel from \"../utils/components/InputWLabel\";\r\nimport SelectWLabel from \"../utils/components/SelectWLabel\";\r\nimport { formatMoney, scrollToTop } from \"../utils/helper\";\r\nexport class CreatePaid extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      processList: [],\r\n      doctorList: [],\r\n      selectedProcess:[],\r\n      selectedDoctor:[],\r\n      total: '',\r\n      totalError: '',\r\n      selectedProcessError: '',\r\n      selectedDoctorError: '',\r\n      discountNumber:'',\r\n      discountResult: '',\r\n      alinanMiktar:'',\r\n      alinanMiktarView: false,\r\n      balance: 0,\r\n      discountType: 'rate',\r\n      editable: true,\r\n      date: '',\r\n      date2: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    scrollToTop();\r\n    setTimeout(() => {\r\n      this.props.headerTitleSet(this.props.translate('payments'));\r\n    }, 400);\r\n    this.getData();\r\n    if (this.props.match.url === authRoutes.addPaid.links[this.props.lang].replace(\r\n      \":id\",\r\n      this.props.match.params.id\r\n    )) {\r\n      this.setState({alinanMiktarView: true})\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    clearTimeout(this._loadRowsTimeout)\r\n  }\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    this.setState({ [name]: value }, () => {\r\n      if (name === 'discountNumber' || name === 'total') {\r\n        if (this.state.total !== \"\" || this.state.discountNumber !== \"\") {\r\n          if (this.state.discountType === 'rate') {\r\n            if (\r\n              Number(this.state.total) >=\r\n              Number(this.state.total) * Number(this.state.discountNumber / 100)\r\n            ) {\r\n              this.setState({\r\n                discountResult:\r\n                  Number(this.state.total) -\r\n                  Number(this.state.total) *\r\n                    Number(this.state.discountNumber / 100),\r\n              });\r\n            } else {\r\n              this.setState({\r\n                discountNumber: \"\",\r\n              });\r\n            }\r\n          } else{\r\n            console.log(Number(this.state.total) - Number(this.state.discountNumber))\r\n            if (\r\n              Number(this.state.total) - Number(this.state.discountNumber) >=\r\n              0\r\n            ) {\r\n              this.setState({\r\n                discountResult:\r\n                  Number(this.state.total) - Number(this.state.discountNumber),\r\n              });\r\n            } else {\r\n              this.setState({\r\n                discountNumber: \"\",\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          this.setState({\r\n            discountResult: \"\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  getData = ()=>{\r\n    API.get(`Diagnose/ListPrice?length=1000`, {\r\n      headers: {\r\n        ...headers,\r\n        Authorization: `Bearer ${this.props.user.token}`,\r\n      },\r\n    }).then((res) => {\r\n      const processList = [];\r\n      res.data.data.map((e)=>{\r\n        processList.push({\r\n          id: e.diagnose.id,\r\n          label: e.diagnose.name,\r\n          price: e.price,\r\n        })\r\n      })\r\n      this.setState({\r\n        processList,\r\n      },()=>{\r\n        if (\r\n          this.props.match.params.paid !== \"\" &&\r\n          !_.isUndefined(this.props.match.params.paid)\r\n        ) {\r\n          this.editOnly()\r\n        }\r\n      });\r\n      \r\n      this.props.pageLoadingSet(false);\r\n    })\r\n    .catch((err) => {\r\n      // alert(err.response.data.value)\r\n      this.props.pageLoadingSet(false);\r\n    });\r\n    API.get(`Account/ListAllDoctors?length=1000`, {\r\n      headers: {\r\n        ...headers,\r\n        Authorization: `Bearer ${this.props.user.token}`,\r\n      },\r\n    }).then((res) => {\r\n      const doctorList = [];\r\n      res.data.data.map((e)=>{\r\n        doctorList.push({\r\n          id: e.user.id,\r\n          label: e.user.fullName,\r\n        })\r\n      })\r\n      this.setState({\r\n        doctorList\r\n      })\r\n      this.props.pageLoadingSet(false);\r\n    })\r\n    .catch((err) => {\r\n      // alert(err.response.data.value)\r\n      this.props.pageLoadingSet(false);\r\n    });\r\n\r\n    if (\r\n      this.props.match.params.id !== \"\" &&\r\n      !_.isUndefined(this.props.match.params.id)\r\n    ) {\r\n      this.props.pageLoadingSet(true);\r\n\r\n      API.get(`Account/GetById?id=${this.props.match.params.id}`, {\r\n        headers: {\r\n          ...headers,\r\n          Authorization: `Bearer ${this.props.user.token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          const { user } = res.data;\r\n          this.setState({\r\n            name: user.fullName,\r\n            tckn: user.identityNumber,\r\n            passionNo: user.id,\r\n            phone: user.phoneNumber,\r\n            email: user.email,\r\n          });\r\n          this.props.pageLoadingSet(false);\r\n        })\r\n        .catch((err) => {\r\n          // alert(err.response.data.value)\r\n          this.props.pageLoadingSet(false);\r\n        });\r\n      API.get(`Dashboard/Home?passionId=${this.props.match.params.id}`, {\r\n        headers: {\r\n          ...headers,\r\n          Authorization: `Bearer ${this.props.user.token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          const { creditTotal, debtTotal } = res.data;\r\n          this.setState({\r\n            balance: debtTotal - creditTotal,\r\n          });\r\n          this.props.pageLoadingSet(false);\r\n        })\r\n        .catch((err) => {\r\n          this.props.pageLoadingSet(false);\r\n        });\r\n    }\r\n    \r\n  }\r\n  search = (nameKey, myArray) => {\r\n    for (var i=0; i < myArray.length; i++) {\r\n        if (myArray[i].id === nameKey) {\r\n            return myArray[i];\r\n        }\r\n    }\r\n}\r\n\r\n  editOnly = () => {\r\n    this.props.pageLoadingSet(true);\r\n      API.get(`Payment/GetById?id=${this.props.match.params.paid}`, {\r\n        headers: {\r\n          ...headers,\r\n          Authorization: `Bearer ${this.props.user.token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          const process = this.search(res.data.processId, this.state.processList);\r\n\r\n          this.setState({\r\n            alinanMiktarView: res.data.paymentType === 10,\r\n            total: res.data.price,\r\n            discountNumber:res.data.discountRate === 0 ? res.data.price - res.data.amount > 0 ? res.data.price - res.data.amount : '' : res.data.discountRate,\r\n            discountResult: res.data.price === res.data.amount ? '' : res.data.amount,\r\n            alinanMiktar:res.data.amount,\r\n            selectedProcess:[process],\r\n            selectedDoctor:res.data.doctor !== null ? [{id:res.data.doctor.id, label:res.data.doctor.fullName}] : [],\r\n            discountType: res.data.discountRate > 0 ? 'rate' : 'amount',\r\n          })\r\n          this.props.pageLoadingSet(false);\r\n        })\r\n        .catch((err) => {\r\n          this.props.pageLoadingSet(false);\r\n        });\r\n  }\r\n\r\n  postData = (q, r) =>{\r\n    const {total, discountNumber, selectedProcess, selectedDoctor, alinanMiktar, discountType, date, date2} = this.state;\r\n    this.setState(\r\n      {\r\n        totalError: total === ''\r\n          ? \"Toplam fatura tutarını giriniz\"\r\n          : \"\",\r\n        selectedProcessError: selectedProcess.length === 0 ? \"Lütfen tedavi adını giriniz\" : '',\r\n        selectedDoctorError: selectedDoctor.length === 0 ? \"Lütfen doktor adını giriniz\" : '',\r\n      },\r\n      () => {\r\n        const {totalError, selectedProcessError, selectedDoctorError} = this.state;\r\n        if (q !== \"miktar\") {\r\n          if (\r\n            totalError === \"\" &&\r\n            selectedProcessError === \"\" &&\r\n            selectedDoctorError === \"\"\r\n          ) {\r\n            const data = {\r\n              userId: this.props.match.params.id,\r\n              price: parseFloat(total),\r\n              discountRate:\r\n                discountNumber === \"\" || discountType !== 'rate' ? 0 : parseFloat(discountNumber),\r\n              amount: discountNumber === \"\" || discountType === 'rate' ? 0 : parseFloat(discountNumber),\r\n              createDate: this.state.date !== '' ? moment(date).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"),\r\n              processId: parseInt(selectedProcess[0].id),\r\n              paymentType: 0,\r\n              doctorId: selectedDoctor[0].id,\r\n            };\r\n\r\n            if (this.props.match.params.paid !== \"\" && !_.isUndefined(this.props.match.params.paid)) {\r\n              data.id = parseInt(this.props.match.params.paid)\r\n            }\r\n            this.props.pageLoadingSet(true);\r\n            API.post(\"Payment\", data, {\r\n              headers: {\r\n                ...headers,\r\n                Authorization: `Bearer ${this.props.user.token}`,\r\n              },\r\n            })\r\n              .then((res) => {\r\n                this.props.pageLoadingSet(false);\r\n                if (r === \"next\") {\r\n                  this.setState({\r\n                    alinanMiktarView: true,\r\n                  });\r\n                } else {\r\n                  this.props.history.push(\r\n                    authRoutes.userDetail.links[this.props.lang].replace(\r\n                      \":id\",\r\n                      this.props.match.params.id\r\n                    )\r\n                  );\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                this.props.pageLoadingSet(false);\r\n                this.setState({ isSending: false });\r\n              });\r\n          }\r\n         } else {\r\n            const data = {\r\n              userId: this.props.match.params.id,\r\n              price: parseFloat(alinanMiktar),\r\n              discountRate: 0,\r\n              createDate: this.state.date2 !== '' ? moment(date2).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"),\r\n              processId: 0,\r\n              paymentType: 10,\r\n              doctorId: \"\",\r\n              description: \"Ödeme alındı\",\r\n            };\r\n            this.props.pageLoadingSet(true);\r\n            API.post(\"Payment\", data, {\r\n              headers: {\r\n                ...headers,\r\n                Authorization: `Bearer ${this.props.user.token}`,\r\n              },\r\n            })\r\n              .then((res) => {\r\n                alert(12312);\r\n                this.props.pageLoadingSet(false);\r\n                this.props.history.push(\r\n                  authRoutes.userDetail.links[this.props.lang].replace(\r\n                    \":id\",\r\n                    this.props.match.params.id\r\n                  )\r\n                );\r\n              })\r\n              .catch((err) => {\r\n                this.props.pageLoadingSet(false);\r\n                this.setState({ isSending: false });\r\n              });\r\n          }\r\n        }\r\n    );\r\n  }\r\n  save = (redirect)=>{\r\n    this.postData('save', redirect);\r\n  }\r\n  saveAndFatura = ()=>{\r\n    this.postData('miktar', '');\r\n  }\r\n  discountTypeChange = (discountType)=>{\r\n    this.setState({\r\n      discountType \r\n    },()=>{\r\n      if (this.state.total !== \"\" || this.state.discountNumber !== \"\") {\r\n        if (this.state.discountType === 'rate') {\r\n          if (\r\n            Number(this.state.total) >=\r\n            Number(this.state.total) * Number(this.state.discountNumber / 100)\r\n          ) {\r\n            this.setState({\r\n              discountResult:\r\n                Number(this.state.total) -\r\n                Number(this.state.total) *\r\n                  Number(this.state.discountNumber / 100),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              discountNumber: \"\",\r\n            });\r\n          }\r\n        } else{\r\n          console.log(Number(this.state.total) - Number(this.state.discountNumber))\r\n          if (\r\n            Number(this.state.total) - Number(this.state.discountNumber) >=\r\n            0\r\n          ) {\r\n            this.setState({\r\n              discountResult:\r\n                Number(this.state.total) - Number(this.state.discountNumber),\r\n            });\r\n          } else {\r\n            this.setState({\r\n              discountNumber: \"\",\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        this.setState({\r\n          discountResult: \"\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n  setDate(date){\r\n      this.setState({\r\n        date: date,\r\n      });\r\n  }\r\n  setDate2(date){\r\n    this.setState({\r\n      date2: date\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Payments\">\r\n        <div className=\"row  mt-5\">\r\n          <div className=\"col-md-4 mb-4\">\r\n            <div className=\"border-radius border rounded\">\r\n              <div className=\"card-title\">Hasta Kartı</div>\r\n              <div className=\"card-body\">\r\n                <p>\r\n                  {this.state.name}\r\n                  <br />\r\n                  T.C. : {this.state.tckn}\r\n                </p>\r\n                <p>\r\n                  Hasta No:\r\n                  <br />\r\n                  {this.state.passionNo}\r\n                </p>\r\n                <p>\r\n                  Telefon:\r\n                  <br /> {this.state.phone}\r\n                </p>\r\n                <p>\r\n                  E-posta:\r\n                  <br />\r\n                  {this.state.email}\r\n                </p>\r\n                <div className=\"card-balance mt-5\">\r\n                  <p className=\"text-white p-0 m-0 font-weight-bold fs-16\">\r\n                    {formatMoney(this.state.balance) + \" TL\"}\r\n                  </p>\r\n                  <span className=\"text-white fs-12\">Bakiye</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-8 mb-4\">\r\n            {!this.state.alinanMiktarView && (\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-2\">\r\n                      <div className=\"top-item select-box\">\r\n                        <SelectWLabel\r\n                          name=\"selectedProcess\"\r\n                          id=\"selectedProcess\"\r\n                          label=\"Tedavi\"\r\n                          value={this.state.selectedProcess}\r\n                          setValue={(selected) => {\r\n                            this.setState({\r\n                              selectedProcess: selected,\r\n                              total: !_.isUndefined(selected[0])\r\n                                ? selected[0].price\r\n                                : \"\",\r\n                              discountResult: !_.isUndefined(selected[0])\r\n                                ? Number(selected[0].price) -\r\n                                  Number(selected[0].price) *\r\n                                    Number(this.state.discountNumber / 100)\r\n                                : \"\",\r\n                            });\r\n                          }}\r\n                          placeholder=\"Tedavi Adı\"\r\n                          options={this.state.processList}\r\n                          errorMessage={this.state.selectedProcessError}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-2\">\r\n                      <div className=\"top-item select-box\">\r\n                        <SelectWLabel\r\n                          name=\"selectedDoctor\"\r\n                          id=\"selectedDoctor\"\r\n                          label=\"Doktor\"\r\n                          setValue={(selected) => {\r\n                            this.setState({\r\n                              selectedDoctor: selected,\r\n                            });\r\n                          }}\r\n                          placeholder=\"Doktor\"\r\n                          options={this.state.doctorList}\r\n                          value={this.state.selectedDoctor}\r\n                          errorMessage={this.state.selectedDoctorError}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-2\">\r\n                      <InputWLabel\r\n                        classes=\"mt-3\"\r\n                        type=\"text\"\r\n                        name=\"total\"\r\n                        id=\"total\"\r\n                        label=\"İşlem Ücreti\"\r\n                        placeholder=\"İşlem Ücreti\"\r\n                        value={this.state.total}\r\n                        setValue={this.handleChange}\r\n                        inputRef={this.totalRef}\r\n                        tabIndex={1}\r\n                        errorMessage={this.state.totalError}\r\n                        disabled={this.state.editable}\r\n                      />\r\n                      <div\r\n                        className=\"discount-or-amount\"\r\n                        onClick={() => {\r\n                          this.setState({ editable: !this.state.editable });\r\n                        }}\r\n                      >\r\n                        <div\r\n                          className={`discount ${\r\n                            !this.state.editable && \"active\"\r\n                          }`}\r\n                        >\r\n                          <svg\r\n                            width={20}\r\n                            fill={this.state.editable ? \"#7273CD\":\"#fff\"}\r\n                            viewBox=\"-15 -15 484.00019 484\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path d=\"m401.648438 18.234375c-24.394532-24.351563-63.898438-24.351563-88.292969 0l-22.101563 22.222656-235.269531 235.144531-.5.503907c-.121094.121093-.121094.25-.25.25-.25.375-.625.746093-.871094 1.121093 0 .125-.128906.125-.128906.25-.25.375-.371094.625-.625 1-.121094.125-.121094.246094-.246094.375-.125.375-.25.625-.378906 1 0 .121094-.121094.121094-.121094.25l-52.199219 156.96875c-1.53125 4.46875-.367187 9.417969 2.996094 12.734376 2.363282 2.332031 5.550782 3.636718 8.867188 3.625 1.355468-.023438 2.699218-.234376 3.996094-.625l156.847656-52.324219c.121094 0 .121094 0 .25-.121094.394531-.117187.773437-.285156 1.121094-.503906.097656-.011719.183593-.054688.253906-.121094.371094-.25.871094-.503906 1.246094-.753906.371093-.246094.75-.621094 1.125-.871094.125-.128906.246093-.128906.246093-.25.128907-.125.378907-.246094.503907-.5l257.371093-257.371094c24.351563-24.394531 24.351563-63.898437 0-88.289062zm-232.273438 353.148437-86.914062-86.910156 217.535156-217.535156 86.914062 86.910156zm-99.15625-63.808593 75.929688 75.925781-114.015626 37.960938zm347.664062-184.820313-13.238281 13.363282-86.917969-86.917969 13.367188-13.359375c14.621094-14.609375 38.320312-14.609375 52.945312 0l33.964844 33.964844c14.511719 14.6875 14.457032 38.332031-.121094 52.949218zm0 0\" />\r\n                          </svg>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <label for=\"total\" className='fs-16'>Tarih</label>\r\n                      <DatePicker\r\n                        placeholderText='Tarih'\r\n                        selected={this.state.date}\r\n                        onChange={(date) => this.setDate(date, \"date\")}\r\n                        className=\"w-100\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-2\">\r\n                      <InputWLabel\r\n                        classes=\"mt-3\"\r\n                        type=\"discount\"\r\n                        name=\"discountNumber\"\r\n                        id=\"discountNumber\"\r\n                        label={\r\n                          this.state.discountType === \"rate\"\r\n                            ? \"İndirim Oranı\"\r\n                            : \"İndirim Tutarı\"\r\n                        }\r\n                        placeholder={\r\n                          this.state.discountType === \"rate\"\r\n                            ? \"İndirim Oranı\"\r\n                            : \"İndirim Tutarı\"\r\n                        }\r\n                        value={this.state.discountNumber}\r\n                        setValue={this.handleChange}\r\n                        inputRef={this.discountNumberRef}\r\n                        tabIndex={1}\r\n                      />\r\n                      <div className=\"discount-or-amount\">\r\n                        <div\r\n                          className={`discount ${\r\n                            this.state.discountType === \"rate\" && \"active\"\r\n                          }`}\r\n                          onClick={() => this.discountTypeChange(\"rate\")}\r\n                        >\r\n                          %\r\n                        </div>\r\n                        <div\r\n                          className={`discount ${\r\n                            this.state.discountType === \"amount\" && \"active\"\r\n                          }`}\r\n                          onClick={() => this.discountTypeChange(\"amount\")}\r\n                        >\r\n                          ₺\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-2\">\r\n                      <InputWLabel\r\n                        classes=\"mt-3\"\r\n                        type=\"text\"\r\n                        name=\"discountResult\"\r\n                        id=\"discountResult\"\r\n                        label=\"İndirimli Fatura Tutarı\"\r\n                        placeholder=\"İndirimli Fatura Tutarı\"\r\n                        value={\r\n                          this.state.discountNumber === \"\"\r\n                            ? \"\"\r\n                            : this.state.discountResult\r\n                        }\r\n                        setValue={this.handleChange}\r\n                        inputRef={this.discountResultRef}\r\n                        tabIndex={1}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <button\r\n                        className=\"primary-button d-inline-flex\"\r\n                        onClick={() => this.save()}\r\n                      >\r\n                        Onayla\r\n                      </button>\r\n                      <button\r\n                        className=\"primary-white-button d-inline-flex ml-4\"\r\n                        onClick={() => this.save(\"next\")}\r\n                      >\r\n                        Onayla ve Miktar Ekle\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {this.state.alinanMiktarView && (\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 mt-2\">\r\n                  <InputWLabel\r\n                    classes=\"mt-3\"\r\n                    type=\"text\"\r\n                    name=\"alinanMiktar\"\r\n                    id=\"alinanMiktar\"\r\n                    label=\"Alınan Miktar\"\r\n                    placeholder=\"Alınan Miktar\"\r\n                    value={this.state.alinanMiktar}\r\n                    setValue={this.handleChange}\r\n                    inputRef={this.alinanMiktarRef}\r\n                    tabIndex={1}\r\n                    errorMessage={this.state.errorMessage}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                      <label for=\"total\" className='fs-16'>Tarih</label>\r\n                      <DatePicker\r\n                        placeholderText='Tarih'\r\n                        selected={this.state.date2}\r\n                        onChange={(date) => this.setDate2(date, \"date\")}\r\n                        className=\"w-100\"\r\n                      />\r\n                    </div>\r\n                <div className=\"col-md-12\">\r\n                  <button\r\n                    className=\"primary-button d-inline-flex\"\r\n                    onClick={() => this.saveAndFatura()}\r\n                  >\r\n                    Onayla\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePaid\r\n","C:\\Users\\user\\Desktop\\monk-pay\\src\\Payments\\Payments.js",["156"],"C:\\Users\\user\\Desktop\\monk-pay\\src\\App\\Layout\\components\\UserArea.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\Home\\Home.js",["157","158","159"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Bar } from '@reactchartjs/react-chart.js'\r\nimport { Link } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { formatMoney, scrollToTop } from \"../utils/helper\";\r\nimport API, { headers } from \"../utils/API\";\r\nimport { headerTitleSet } from \"../App/appActions\";\r\nimport { authRoutes } from \"../App/routes\"\r\n\r\nexport class Home extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      startDate: '',\r\n      endDate:'',\r\n      graphStartDate:moment().subtract(1, 'months').format('YYYY-MM-DD'),\r\n      balanceList:[],\r\n      creditTotal:null,\r\n      debtTotal: null,\r\n      processCount: 0,\r\n      list: [],\r\n      barFilter: 'day',\r\n      graphType: 0,\r\n      data: {\r\n        labels: [],\r\n        datasets: [{\r\n          type: 'line',\r\n          label: ' ',\r\n          borderColor: '#FDC132',\r\n          borderWidth: 2,\r\n          fill: false,\r\n          data: [],\r\n        },\r\n        {\r\n          type: 'bar',\r\n          label: ' ',\r\n          backgroundColor: '#38C976',\r\n          data: [],\r\n          borderColor: 'white',\r\n          borderWidth: 0,\r\n        }],\r\n      },\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n      this.props.headerTitleSet(this.props.translate('home'));\r\n    }, 400);\r\n    this.getData(false)\r\n    scrollToTop();\r\n  };\r\n\r\n  getData = (loading = true) => {\r\n    if(loading === true) {\r\n      this.props.pageLoadingSet(true);\r\n    }\r\n    const startDate = this.state.startDate !== '' ? moment(this.state.startDate).format('YYYY-MM-DD') : ''\r\n    const endDate = this.state.endDate !== '' ? moment(this.state.endDate).format('YYYY-MM-DD') : ''\r\n    const graphStartDate = this.state.graphStartDate !== '' ? moment(this.state.graphStartDate).format('YYYY-MM-DD') : ''\r\n    API.get(`Dashboard/Home?startDate=${startDate}&endDate=${endDate}&graphStartDate=${graphStartDate}&graphType=${this.state.graphType}`, { headers: { ...headers, Authorization: `Bearer ${this.props.user.token}` }})\r\n        .then((res) => {\r\n          const {balanceList, creditTotal, debtTotal, list, processCount} = res.data;\r\n            const labels= [];\r\n            const lineData= []\r\n            const barData= []\r\n          balanceList.forEach((e, i) => {\r\n            labels.push(e.date);\r\n            lineData.push(e.amount)\r\n            barData.push(e.amount)\r\n          });\r\n          this.setState({\r\n            balanceList, \r\n            creditTotal, \r\n            debtTotal, \r\n            list,\r\n            processCount,\r\n            data: {\r\n              labels,\r\n              datasets: [{\r\n                type: 'line',\r\n                label: ' ',\r\n                borderColor: '#FDC132',\r\n                borderWidth: 2,\r\n                fill: false,\r\n                data: lineData,\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: ' ',\r\n                backgroundColor: '#38C976',\r\n                data: barData,\r\n                borderColor: 'white',\r\n                borderWidth: 0,\r\n              }],\r\n            }\r\n          });\r\n          this.props.pageLoadingSet(false);\r\n        })\r\n        .catch((err) => {\r\n          // alert(err.response.data.value)\r\n          this.props.pageLoadingSet(false);\r\n        });\r\n  }\r\n\r\n  setDate(date, type){\r\n    if(type === 'start'){\r\n      this.setState({\r\n        startDate: date\r\n      }, ()=>{\r\n        this.state.endDate !== '' && this.state.startDate !== '' && this.getData()\r\n      })\r\n    } else{\r\n      this.setState({\r\n        endDate: date\r\n      },()=>{\r\n        this.state.endDate !== '' && this.state.startDate !== '' && this.getData()\r\n      })\r\n    }\r\n  }\r\n  barFilter(e){\r\n    let date = '';\r\n    let graphType = 0;\r\n    if (e === 'day') {\r\n      date = moment().subtract(7, 'day').format('YYYY-MM-DD')\r\n      graphType = 0;\r\n    } else if(e === 'mounth'){\r\n      date = moment().subtract(1, 'months').format('YYYY-MM-DD')\r\n      graphType = 10;\r\n    } else if(e==='year'){\r\n      date = moment().subtract(1, 'years').format('YYYY-MM-DD')\r\n      graphType = 20;\r\n    }\r\n    console.log(date);\r\n    this.setState({\r\n      barFilter: e,\r\n      graphStartDate: date,\r\n      graphType\r\n    },()=>{\r\n      this.getData()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"align-items-center justify-content-between mt-4 mb-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link\r\n                className=\"primary-button d-inline-flex\"\r\n                to={authRoutes.createPatient.links[this.props.lang]}\r\n              >\r\n                Hasta Kaydı Oluştur\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mb-4\">\r\n            <div className=\"border p-3 rounded h-100\">\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <h3>Tahsil Edilen</h3>\r\n                <div className=\"bar-filter\">\r\n                  <a\r\n                    className={this.state.barFilter === 'day' ? 'active' : ''}\r\n                    alt=\"D\"\r\n                    onClick={() => {\r\n                      this.barFilter('day')\r\n                    }}\r\n                  >\r\n                    D\r\n                  </a>\r\n                  <a\r\n                    className={this.state.barFilter === 'mounth' ? 'active' : ''}\r\n                    alt=\"M\"\r\n                    onClick={() => {\r\n                      this.barFilter('mounth')\r\n                    }}\r\n                  >\r\n                    M\r\n                  </a>\r\n                  <a\r\n                    className={this.state.barFilter === 'year' ? 'active' : ''}\r\n                    alt=\"Y\"\r\n                    onClick={() => {\r\n                      this.barFilter('year')\r\n                    }}\r\n                  >\r\n                    Y\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <Bar \r\n                data={this.state.data} \r\n                options={{\r\n                  cornerRadius: 10,\r\n                  legend: { display: false },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        barThickness: 7,\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: false,\r\n                        },\r\n                        ticks: {\r\n                          autoSkip: false,\r\n                        },\r\n                        stacked: true,\r\n                      },\r\n                    ],\r\n                    yAxes: [{\r\n                      stacked: true,\r\n                      ticks:{\r\n                        min: 0,\r\n                      }\r\n                    },\r\n                    ],\r\n                  },\r\n                }}\r\n    \r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <div className=\"row h-100\">\r\n              <div className=\"col-12 mb-4\">\r\n                <div className=\"border rounded pl-3 pr-3 pt-4 pb-4\">\r\n                  <div className=\"pb-3 mb-4 border-bottom\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <DatePicker\r\n                            selected={this.state.startDate}\r\n                            onChange={(date) => this.setDate(date, \"start\")}\r\n                            placeholderText=\"Başlangıç Tarihi\"\r\n                            className=\"w-100 min\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <DatePicker\r\n                            selected={this.state.endDate}\r\n                            className=\"w-100 min\"\r\n                            onChange={(date) => this.setDate(date, \"end\")}\r\n                            placeholderText=\"Bitiş Tarihi\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row h-100 align-items-center\">\r\n                    <div className=\"col-6 text-center\">\r\n                      <p className=\"fs-24 mb-2\">{this.state.processCount}</p>\r\n                      <p className=\"mb-0\">Tedavi Sayısı</p>\r\n                    </div>\r\n                    <div className=\"col-6 text-center\">\r\n                      <p className=\"fs-24 mb-2\">{formatMoney(this.state.debtTotal)} TL</p>\r\n                      <p className=\"mb-0\">Toplam Alacak</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 d-flex flex-column justify-content-end\">\r\n                <div className=\"border rounded pl-3 pr-3 pt-4 pb-4 h-100\">\r\n                  <h3 className=\"border-bottom pb-3 mb-0\">Açık Bakiye</h3>\r\n                  <div className=\"row h-100 align-items-center\">\r\n                    <div className=\"col-12 text-center\">\r\n                      <p className=\"fs-24 mb-2\">\r\n                      {formatMoney(this.state.debtTotal - this.state.creditTotal)} TL\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    headerTitleSet: (text) => dispatch(headerTitleSet(text)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\helper.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\components\\SelectWLabel.js",["160"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport crypto from \"crypto\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { validateInput } from \"../helper\";\r\n\r\nexport default class SelectWLabel extends Component {\r\n  state = {\r\n    isFilled: false,\r\n    isActive: false,\r\n  };\r\n\r\n  id = crypto.randomBytes(6).toString(\"hex\");\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.value) this.setState({ isFilled: true }, this.handleFocus);\r\n  };\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (!prevProps.value && this.props.value && !this.state.isFilled)\r\n      this.setState({ isFilled: true }, this.handleFocus);\r\n  };\r\n\r\n  handleFocus = () =>\r\n    document.getElementById(`input-${this.id}`).classList.add(\"focused\");\r\n\r\n  handleBlur = (e) => {\r\n    if (this.props.validate)\r\n      if (!validateInput(this.props.type, e.target.value)) {\r\n        e.target.value = \"\";\r\n        this.props.setValue(e);\r\n      }\r\n\r\n    if (e.target.value === \"\" || e.target.value === \"empty-placeholder-value\")\r\n      document.getElementById(`input-${this.id}`).classList.remove(\"focused\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`SelectWLabel position-relative d-flex justify-content-start align-items-center ${\r\n          this.props.classes ? this.props.classes : ``\r\n        } ${this.props.errorMessage !=='' ? 'error':''}`}\r\n        id={`input-${this.id}`}\r\n        data-move-label={this.state.isFilled || this.state.isActive}\r\n        data-w-icon={\"icon\" in this.props}\r\n        data-label={this.props.label}\r\n        data-error={Boolean(this.props.errorMessage)}\r\n        data-error-message={`* ${this.props.errorMessage}`}\r\n      >\r\n        {this.props.icon ? (\r\n          <div className=\"icon d-flex justify-content-center align-items-center\">\r\n            {this.props.icon}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Typeahead\r\n          id={this.props.id}\r\n          onChange={this.props.setValue}\r\n          options={this.props.options}\r\n          placeholder={this.props.placeholder}\r\n          selected={this.props.value}\r\n          value={this.props.value}\r\n        />\r\n        <label className='position-absolute'>{this.props.label}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\components\\InputWLabel.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\pages\\components\\LeftSide.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\utils\\components\\CutomCheckbox.js",[],"C:\\Users\\user\\Desktop\\monk-pay\\src\\Auth\\authReducer.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":13,"column":8,"nodeType":"167","messageId":"168","endLine":13,"endColumn":33},{"ruleId":"165","severity":1,"message":"169","line":15,"column":8,"nodeType":"167","messageId":"168","endLine":15,"endColumn":33},{"ruleId":"165","severity":1,"message":"170","line":17,"column":8,"nodeType":"167","messageId":"168","endLine":17,"endColumn":24},{"ruleId":"165","severity":1,"message":"171","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":15},{"ruleId":"165","severity":1,"message":"172","line":13,"column":7,"nodeType":"167","messageId":"168","endLine":13,"endColumn":16},{"ruleId":"165","severity":1,"message":"173","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"174","line":8,"column":23,"nodeType":"167","messageId":"168","endLine":8,"endColumn":31},{"ruleId":"165","severity":1,"message":"175","line":8,"column":33,"nodeType":"167","messageId":"168","endLine":8,"endColumn":44},{"ruleId":"165","severity":1,"message":"176","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":19},{"ruleId":"165","severity":1,"message":"173","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"177","line":4,"column":38,"nodeType":"167","messageId":"168","endLine":4,"endColumn":54},{"ruleId":"165","severity":1,"message":"178","line":11,"column":10,"nodeType":"167","messageId":"168","endLine":11,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":68,"column":27,"nodeType":"181","messageId":"182","endLine":68,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":81,"column":24,"nodeType":"181","messageId":"182","endLine":81,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":106,"column":28,"nodeType":"181","messageId":"182","endLine":106,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":137,"column":28,"nodeType":"181","messageId":"182","endLine":137,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":49,"column":27,"nodeType":"181","messageId":"182","endLine":49,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":167,"column":19,"nodeType":"185","endLine":173,"endColumn":20},{"ruleId":"183","severity":1,"message":"184","line":176,"column":19,"nodeType":"185","endLine":182,"endColumn":20},{"ruleId":"183","severity":1,"message":"184","line":185,"column":19,"nodeType":"185","endLine":191,"endColumn":20},{"ruleId":"165","severity":1,"message":"186","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'doctor_settingsMenuActive' is defined but never used.","Identifier","unusedVar","'system_settingsMenuActive' is defined but never used.","'clinicMenuActive' is defined but never used.","'alert' is defined but never used.","'allRoutes' is assigned a value but never used.","'Link' is defined but never used.","'currency' is defined but never used.","'formatMoney' is defined but never used.","'InputWLabel' is defined but never used.","'setDefaultLocale' is defined but never used.","'authRoutes' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]
