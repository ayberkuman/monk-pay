[{"/Users/erdincmaden/Documents/Other/monk-medical-web/src/index.js":"1","/Users/erdincmaden/Documents/Other/monk-medical-web/src/ErrorBoundary.js":"2","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App.js":"3","/Users/erdincmaden/Documents/Other/monk-medical-web/src/store.js":"4","/Users/erdincmaden/Documents/Other/monk-medical-web/src/rootReducer.js":"5","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout.js":"6","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Router.js":"7","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appActions.js":"8","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/LanguageFiles.js":"9","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/API.js":"10","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/helper.js":"11","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authActions.js":"12","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/components/Alert.js":"13","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appReducer.js":"14","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/routes.js":"15","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authReducer.js":"16","/Users/erdincmaden/Documents/Other/monk-medical-web/src/NotFound/NotFound.js":"17","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/Header.js":"18","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/ForgotPassword.js":"19","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Home/Home.js":"20","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/components/UserArea.js":"21","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/Login.js":"22","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/InputWLabel.js":"23","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/components/LeftSide.js":"24","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/CutomCheckbox.js":"25","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Payments/Payments.js":"26","/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/SelectWLabel.js":"27","/Users/erdincmaden/Documents/Other/monk-medical-web/src/UserDetail/UserDetail.js":"28","/Users/erdincmaden/Documents/Other/monk-medical-web/src/CreatePatient/CreatePatient.js":"29","/Users/erdincmaden/Documents/Other/monk-medical-web/src/CreatePaid/CreatePaid.js":"30","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Expense/Expense.js":"31"},{"size":892,"mtime":1610576010037,"results":"32","hashOfConfig":"33"},{"size":426,"mtime":1610034889211,"results":"34","hashOfConfig":"33"},{"size":5373,"mtime":1611952972388,"results":"35","hashOfConfig":"33"},{"size":323,"mtime":1610041609860,"results":"36","hashOfConfig":"33"},{"size":405,"mtime":1610035483102,"results":"37","hashOfConfig":"33"},{"size":4814,"mtime":1611660284829,"results":"38","hashOfConfig":"33"},{"size":3801,"mtime":1611258093807,"results":"39","hashOfConfig":"33"},{"size":450,"mtime":1611258433029,"results":"40","hashOfConfig":"33"},{"size":453,"mtime":1610223382980,"results":"41","hashOfConfig":"33"},{"size":239,"mtime":1611514312488,"results":"42","hashOfConfig":"33"},{"size":1825,"mtime":1611513367307,"results":"43","hashOfConfig":"33"},{"size":234,"mtime":1611939413748,"results":"44","hashOfConfig":"33"},{"size":3167,"mtime":1610035823406,"results":"45","hashOfConfig":"33"},{"size":1046,"mtime":1610818349425,"results":"46","hashOfConfig":"33"},{"size":2931,"mtime":1611912243859,"results":"47","hashOfConfig":"33"},{"size":874,"mtime":1610656702805,"results":"48","hashOfConfig":"33"},{"size":1386,"mtime":1610221638095,"results":"49","hashOfConfig":"33"},{"size":2395,"mtime":1611939316045,"results":"50","hashOfConfig":"33"},{"size":5178,"mtime":1611951957378,"results":"51","hashOfConfig":"33"},{"size":8688,"mtime":1612003060011,"results":"52","hashOfConfig":"33"},{"size":1108,"mtime":1611939329525,"results":"53","hashOfConfig":"33"},{"size":6159,"mtime":1611951952807,"results":"54","hashOfConfig":"33"},{"size":3929,"mtime":1611934860541,"results":"55","hashOfConfig":"33"},{"size":641,"mtime":1610557030096,"results":"56","hashOfConfig":"33"},{"size":785,"mtime":1610558021800,"results":"57","hashOfConfig":"33"},{"size":7441,"mtime":1612003199299,"results":"58","hashOfConfig":"33"},{"size":2265,"mtime":1611485974193,"results":"59","hashOfConfig":"33"},{"size":12075,"mtime":1611912347661,"results":"60","hashOfConfig":"33"},{"size":6813,"mtime":1611950180633,"results":"61","hashOfConfig":"33"},{"size":15302,"mtime":1612001256095,"results":"62","hashOfConfig":"33"},{"size":8953,"mtime":1611939051643,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"15q6d9e",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},"/Users/erdincmaden/Documents/Other/monk-medical-web/src/index.js",[],["133","134"],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/ErrorBoundary.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/store.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/rootReducer.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout.js",["135","136","137","138"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from '../assets/images/payment-logo.svg'\nimport homeMenu from '../assets/images/home-menu.svg'\nimport homeMenuActive from '../assets/images/home-menu-active.svg'\nimport paymentsMenu from '../assets/images/payments-menu.svg'\nimport paymentsMenuActive from '../assets/images/payments-menu-active.svg'\nimport analysesMenu from '../assets/images/analyses-menu.svg'\nimport analysesMenuActive from '../assets/images/analyses-menu-active.svg'\nimport expensesMenu from '../assets/images/expenses-menu.svg'\nimport expensesMenuActive from '../assets/images/expenses-menu-active.svg'\nimport doctor_settingsMenu from '../assets/images/doctor_settings-menu.svg'\nimport doctor_settingsMenuActive from '../assets/images/doctor_settings-menu-active.svg'\nimport system_settingsMenu from '../assets/images/system_settings-menu.svg'\nimport system_settingsMenuActive from '../assets/images/system_settings-menu-active.svg'\nimport clinicMenu from '../assets/images/clinic-menu.svg'\nimport clinicMenuActive from '../assets/images/clinic-menu-active.svg'\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { authRoutes } from \"../App/routes\"\nconst Header = React.lazy(() => import(\"./Layout/Header\"));\nconst Layout = (props) => {\n  const {location} = props;\n  return (\n    <>\n      <div className=\"d-flex\">\n        {props.user.isLoggedIn && (\n          <div className=\"left-side-menu min-vh-100\" id=\"sidebar-wrapper\">\n            <Link to={authRoutes.home.links[props.lang]}>\n              <img src={logo} alt={props.translate(\"payments\")} />\n            </Link>\n            <Link\n              className={location.pathname === \"/\" ? \"active\" : \"\"}\n              to={authRoutes.home.links[props.lang]}\n            >\n              <img\n                className='mh-24'\n                src={location.pathname === \"/\" ? homeMenuActive : homeMenu}\n                alt={props.translate(\"home\")}\n              />\n              {props.translate(\"home\")}\n            </Link>\n            <Link\n              className={\n                location.pathname.includes(\n                  authRoutes.payments.links[props.lang]\n                )\n                  ? \"active\"\n                  : \"\"\n              }\n              to={authRoutes.payments.links[props.lang]}\n            >\n              <img\n                className='mh-24'\n                src={\n                  location.pathname.includes(\n                    authRoutes.payments.links[props.lang]\n                  )\n                    ? paymentsMenuActive\n                    : paymentsMenu\n                }\n                alt={props.translate(\"payments\")}\n              />\n              {props.translate(\"payments\")}\n            </Link>\n            <Link>\n              <img className='mh-24' src={analysesMenu} alt={props.translate(\"analyses\")} />\n              {props.translate(\"analyses\")}\n            </Link>\n            <Link \n              className={\n                location.pathname.includes(\n                  authRoutes.expense.links[props.lang]\n                )\n                  ? \"active\"\n                  : \"\"\n              }\n              to={authRoutes.expense.links[props.lang]}>\n              <img \n                className='mh-24'\n                src={\n                  location.pathname.includes(\n                    authRoutes.expense.links[props.lang]\n                  )\n                    ? expensesMenuActive\n                    : expensesMenu\n                }\n                alt={props.translate(\"expenses\")} />\n              {props.translate(\"expenses\")}\n            </Link>\n            <Link className=\"border-top\">\n              <img\n                className='mh-24'\n                src={doctor_settingsMenu}\n                alt={props.translate(\"doctor_settings\")}\n              />\n              {props.translate(\"doctor_settings\")}\n            </Link>\n\n            <Link>\n              <img\n                className='mh-24'\n                src={system_settingsMenu}\n                alt={props.translate(\"system_settings\")}\n              />\n              {props.translate(\"system_settings\")}\n            </Link>\n            <hr />\n            <Link>\n              <img className='mh-18' src={clinicMenu} alt={props.translate(\"clinic\")} />\n              {props.translate(\"clinic\")}\n            </Link>\n          </div>\n        )}\n        <div className=\"container-fluid\">\n          <Header\n            lang={props.lang}\n            user={props.user}\n            location={props.location}\n            translate={props.translate}\n            headerTitle={props.headerTitle}\n          />\n          <div id=\"main\">{props.children}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default connect()(withRouter(Layout));\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Router.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appActions.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/LanguageFiles.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/API.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/helper.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authActions.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/components/Alert.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/appReducer.js",["139"],"import { alert } from \"./appActions\";\n\nconst initState = {\n  alert: {\n    type: \"\",\n    content: \"\",\n    timeout: 0,\n    isActive: false,\n  },\n  connection: \"\",\n  pageLoading: false,\n  headerTitle: ''\n};\n\nconst appReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"ALERT\": {\n      const alert = {\n        type: action.alertType,\n        title: action.title,\n        content: action.content,\n        timeout: action.timeout,\n        isActive: true,\n      };\n\n      const app = { ...state, alert };\n\n      return { ...app };\n    }\n\n    case \"RESET_ALERT\": {\n      const alert = {\n        type: \"\",\n        title: \"\",\n        content: \"\",\n        timeout: 0,\n        isActive: false,\n      };\n\n      const app = { ...state, alert };\n\n      return { ...app };\n    }\n\n    case 'PAGE_LOADING': {\n      return { ...state, pageLoading: action.pageLoading } \n    }\n\n    case 'HEADER_TITLE': {\n      return { ...state, headerTitle: action.headerTitle } \n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/routes.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/authReducer.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/NotFound/NotFound.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/Header.js",["140"],"import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport avatar from '../../assets/images/avatar.svg'\n// import Logo from \"../../assets/images/logo.png\";\nimport { logout, update } from \"../../Auth/authActions\";\nimport {\n  authRoutes,\n  globalRoutes,\n  guestRoutes,\n} from \"../routes\";\nimport { UserArea } from \"./components/UserArea\";\n\nconst allRoutes = {\n  ...globalRoutes,\n  ...guestRoutes,\n  ...authRoutes,\n};\n\nclass Header extends Component {\n  state = {\n    isProfilePopupOn: false,\n  };\n\n  profilePopupRef = createRef();\n\n  showProfilePopup = (e) => {\n    e.preventDefault();\n\n    this.setState(\n      (prevState) => {\n        return { isProfilePopupOn: !prevState.isProfilePopupOn };\n      },\n      () => {\n        document.addEventListener(\"click\", this.closeProfilePopup, false);\n      }\n    );\n  };\n\n  closeProfilePopup = (e) => {\n    if (e.target !== this.profilePopupRef.current) {\n      this.setState({ isProfilePopupOn: false }, () => {\n        document.removeEventListener(\"click\", this.closeProfilePopup, false);\n      });\n    }\n  };\n\n  render() {\n    return this.props.user.isLoggedIn ? (\n      <div\n        className=\"header\"\n        data-alt={\n          this.props.location.pathname !==\n          guestRoutes.login.links[this.props.lang]\n        }\n      >\n        <div className=\"row\">\n          <div className=\"col-6 d-flex align-items-center\">\n            <p className='m-0'>{this.props.headerTitle}</p>\n          </div>\n          <div className=\"col-6 d-flex justify-content-end align-items-center\">\n            <span className=\"d-none d-md-flex\">\n              <UserArea\n                user={this.props.user}\n                isProfilePopupOn={this.state.isProfilePopupOn}\n                showProfilePopup={this.showProfilePopup}\n                logout={this.props.logout}\n                profilePopupRef={this.profilePopupRef}\n                lang={this.props.lang}\n                update={this.props.update}\n                avatar={avatar}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div></div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n    update: (user) => dispatch(update(user)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(Header));\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/ForgotPassword.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Home/Home.js",["141","142","143"],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/App/Layout/components/UserArea.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/Login.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/InputWLabel.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Auth/pages/components/LeftSide.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/CutomCheckbox.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Payments/Payments.js",["144","145"],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/utils/components/SelectWLabel.js",["146"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport crypto from \"crypto\";\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { validateInput } from \"../helper\";\n\nexport default class SelectWLabel extends Component {\n  state = {\n    isFilled: false,\n    isActive: false,\n  };\n\n  id = crypto.randomBytes(6).toString(\"hex\");\n\n  componentDidMount = () => {\n    if (this.props.value) this.setState({ isFilled: true }, this.handleFocus);\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (!prevProps.value && this.props.value && !this.state.isFilled)\n      this.setState({ isFilled: true }, this.handleFocus);\n  };\n\n  handleFocus = () =>\n    document.getElementById(`input-${this.id}`).classList.add(\"focused\");\n\n  handleBlur = (e) => {\n    if (this.props.validate)\n      if (!validateInput(this.props.type, e.target.value)) {\n        e.target.value = \"\";\n        this.props.setValue(e);\n      }\n\n    if (e.target.value === \"\" || e.target.value === \"empty-placeholder-value\")\n      document.getElementById(`input-${this.id}`).classList.remove(\"focused\");\n  };\n\n  render() {\n    return (\n      <div\n        className={`SelectWLabel position-relative d-flex justify-content-start align-items-center ${\n          this.props.classes ? this.props.classes : ``\n        } ${this.props.errorMessage !=='' ? 'error':''}`}\n        id={`input-${this.id}`}\n        data-move-label={this.state.isFilled || this.state.isActive}\n        data-w-icon={\"icon\" in this.props}\n        data-label={this.props.label}\n        data-error={Boolean(this.props.errorMessage)}\n        data-error-message={`* ${this.props.errorMessage}`}\n      >\n        {this.props.icon ? (\n          <div className=\"icon d-flex justify-content-center align-items-center\">\n            {this.props.icon}\n          </div>\n        ) : (\n          \"\"\n        )}\n        <Typeahead\n          id={this.props.id}\n          onChange={this.props.setValue}\n          options={this.props.options}\n          placeholder={this.props.placeholder}\n          selected={this.props.value}\n          value={this.props.value}\n        />\n        <label className='position-absolute'>{this.props.label}</label>\n      </div>\n    );\n  }\n}\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/UserDetail/UserDetail.js",["147"],"import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Link } from \"react-router-dom\";\nimport { authRoutes } from \"../App/routes\";\nimport deleteIcon from '../assets/images/delete-icon.svg';\nimport editIcon from '../assets/images/edit-icon.svg';\nimport API, { headers } from \"../utils/API\";\nimport { formatMoney, scrollToTop } from \"../utils/helper\";\n\nexport class UserDetail extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      name: '',\n      tckn: '',\n      passionNo: '',\n      phone: '',\n      email: '',\n      balance: '',\n      yapilanIslemler: [],\n      yapilanIslemlerToplam: 0,\n      islemGecmisi:[],\n      islemGecmisiToplam: 0,\n      hasMore1: false,\n      hasMore2: false, \n      length1: 10,\n      length2: 10,\n      currentpage1: 1,\n      currentpage2: 1,\n    }\n  }\n  componentDidMount = () => {\n    scrollToTop();\n\n    this.getData()\n  }\n  getData = ()=>{\n    if (\n      this.props.match.params.id !== \"\" &&\n      !_.isUndefined(this.props.match.params.id)\n    ) {\n      this.props.pageLoadingSet(true);\n\n      API.get(`Account/GetById?id=${this.props.match.params.id}`, {\n        headers: {\n          ...headers,\n          Authorization: `Bearer ${this.props.user.token}`,\n        },\n      })\n        .then((res) => {\n          const { user } = res.data;\n          this.setState({\n            name: user.fullName,\n            tckn: user.identityNumber,\n            passionNo: user.id,\n            phone: user.phoneNumber,\n            email: user.email,\n          });\n          this.props.pageLoadingSet(false);\n        })\n        .catch((err) => {\n          alert(err.response.data.value)\n          this.props.pageLoadingSet(false);\n        });\n\n      API.get(`Dashboard/Home?passionId=${this.props.match.params.id}`, {\n        headers: {\n          ...headers,\n          Authorization: `Bearer ${this.props.user.token}`,\n        },\n      })\n        .then((res) => {\n          const { creditTotal, debtTotal, list } = res.data;\n          const yapilanIslemler = [];\n          let yapilanIslemlerToplam = 0;\n          const islemGecmisi = [];\n          let islemGecmisiToplam = 0;\n          list.map((e) => {\n            if (e.paymentType === 0) {\n              islemGecmisi.push({\n                description: e.description,\n                price: e.amount,\n                doctorId: e.doctorId,\n                userId: e.userId,\n                id: e.id,\n              });\n              islemGecmisiToplam = islemGecmisiToplam + e.amount;\n            } else{\n              yapilanIslemler.push({\n                description: e.description,\n                price: e.amount,\n                doctorId: e.doctorId,\n                userId: e.userId,\n                id: e.id,\n              });\n              yapilanIslemlerToplam = yapilanIslemlerToplam + e.amount;\n            }\n          });\n          this.setState({\n            balance: debtTotal - creditTotal,\n            islemGecmisi,\n            islemGecmisiToplam: debtTotal,\n            yapilanIslemler,\n            yapilanIslemlerToplam:creditTotal,\n          });\n          this.props.pageLoadingSet(false);\n        })\n        .catch((err) => {\n          alert(err.response.data.value)\n          this.props.pageLoadingSet(false);\n        });\n    }\n  }\n\n  payDelete = (id) => {\n    this.props.pageLoadingSet(true);\n    API.delete(`Payment?paymentId=${id}`, {\n      headers: {\n        ...headers,\n        Authorization: `Bearer ${this.props.user.token}`,\n      },\n    })\n      .then((res) => {\n        this.getData()\n        this.props.pageLoadingSet(false);\n      })\n      .catch((err) => {\n        this.props.pageLoadingSet(false);\n      });\n  }\n    \n  render() {\n    return (\n      <div className=\"Payments\">\n        <div className=\"row pt-4\">\n          <div className=\"col-md-4 mb-4\">\n            <div className=\"border-radius border rounded\">\n              <div className=\"card-title\">Hasta Kartı</div>\n              <div className=\"card-body\">\n                <p>\n                  {this.state.name}\n                  <br />\n                  T.C. : {this.state.tckn}\n                </p>\n                <p>\n                  Hasta No:\n                  <br />\n                  {this.state.passionNo}\n                </p>\n                <p>\n                  Telefon:\n                  <br /> {this.state.phone}\n                </p>\n                <p>\n                  E-posta:\n                  <br />\n                  {this.state.email}\n                </p>\n                <div className=\"card-balance\">\n                  <p className=\"text-white p-0 m-0 font-weight-bold fs-16\">\n                    {formatMoney(this.state.balance) + ' TL'}\n                  </p>\n                  <span className=\"text-white fs-12\">Bakiye</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 mb-4\">\n            <InfiniteScroll\n              dataLength={this.state.islemGecmisi.length}\n              next={this.getData}\n              hasMore={this.state.hasMore1}\n              loader={\n                <tr>\n                  <td>...</td>\n                </tr>\n              }\n              height={385}\n              endMessage={\n                <p style={{ textAlign: \"center\" }}>\n                  {/*<b>Yay! You have seen it all</b>*/}\n                </p>\n              }\n            >\n              <div className=\"react-infinite-table react-infinite-table-fill example-table\">\n                <table className=\"table table-bordered table-striped\">\n                  <thead>\n                    <tr>\n                      <th className=\"react-infinite-table-col-0\">\n                        Yapılan İşlemler\n                      </th>\n                      <th className=\"react-infinite-table-col-1 text-right\">\n                        Toplam : {formatMoney(this.state.islemGecmisiToplam)} TL\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.islemGecmisi.map((i, index) => (\n                      <tr key={index + \"a\"}>\n                        <td className=\"react-infinite-table-col-0\">\n                          {i.description}\n                        </td>\n                        <td\n                          className=\"react-infinite-table-col-1\"\n                          align=\"right\"\n                        >\n                          {formatMoney(i.price)} TL\n                          <Dropdown className=\"float-right dropdown-min\">\n                            <Dropdown.Toggle></Dropdown.Toggle>\n                            <Dropdown.Menu>\n                              <Dropdown.Item\n                                onClick={() =>\n                                  this.props.history.push(\n                                    authRoutes.editPaid.links[this.props.lang]\n                                      .replace(\n                                        \":id\",\n                                        this.props.match.params.id\n                                      )\n                                      .replace(\":paid\", i.id)\n                                  )\n                                }\n                              >\n                                <img src={editIcon} alt=\"\" className=\"mr-2\" />{\" \"}\n                                Düzenle\n                              </Dropdown.Item>\n                              <Dropdown.Item\n                                onClick={() => {\n                                  this.payDelete(i.id);\n                                }}\n                              >\n                                <img src={deleteIcon} alt=\"\" className=\"mr-2\" />{\" \"}\n                                Sil\n                              </Dropdown.Item>\n                            </Dropdown.Menu>\n                          </Dropdown>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </InfiniteScroll>\n            <Link\n              className=\"primary-button d-inline-flex mt-3\"\n              to={authRoutes.addTreatment.links[this.props.lang].replace(\n                \":id\",\n                this.props.match.params.id\n              )}\n            >\n              Tedavi Ekle\n            </Link>\n          </div>\n          <div className=\"col-md-4 mb-4\">\n            <InfiniteScroll\n              dataLength={this.state.yapilanIslemler.length}\n              next={this.getData}\n              hasMore={this.state.hasMore2}\n              loader={\n                <tr>\n                  <td>...</td>\n                </tr>\n              }\n              height={385}\n              endMessage={\n                <p style={{ textAlign: \"center\" }}>\n                  {/*<b>Yay! You have seen it all</b>*/}\n                </p>\n              }\n            >\n              <div className=\"react-infinite-table react-infinite-table-fill example-table\">\n                <table className=\"table table-bordered table-striped\">\n                  <thead>\n                    <tr>\n                      <th className=\"react-infinite-table-col-0\">\n                        Ödeme Geçmisi\n                      </th>\n                      <th className=\"react-infinite-table-col-1 text-right\">\n                        Toplam : {formatMoney(this.state.yapilanIslemlerToplam)} TL\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.yapilanIslemler.map((i, index) => (\n                      <tr key={index + \"a\"}>\n                        <td className=\"react-infinite-table-col-0\">\n                          {i.description}\n                        </td>\n                        <td\n                          className=\"react-infinite-table-col-1\"\n                          align=\"right\"\n                        >\n                          {formatMoney(i.price)} TL\n                          <Dropdown className=\"float-right dropdown-min\">\n                            <Dropdown.Toggle></Dropdown.Toggle>\n                            <Dropdown.Menu>\n                              <Dropdown.Item\n                                onClick={() =>\n                                  this.props.history.push(\n                                    authRoutes.editPaid.links[this.props.lang]\n                                      .replace(\n                                        \":id\",\n                                        this.props.match.params.id\n                                      )\n                                      .replace(\":paid\", i.id)\n                                  )\n                                }\n                              >\n                                <img src={editIcon} alt=\"\" className=\"mr-2\" />{\" \"}\n                                Düzenle\n                              </Dropdown.Item>\n                              <Dropdown.Item\n                                onClick={() => {\n                                  this.payDelete(i.id);\n                                }}\n                              >\n                                <img src={deleteIcon} alt=\"\" className=\"mr-2\" />{\" \"}\n                                Sil\n                              </Dropdown.Item>\n                            </Dropdown.Menu>\n                          </Dropdown>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </InfiniteScroll>\n            <Link\n              className=\"primary-button d-inline-flex mt-3\"\n              to={authRoutes.addPaid.links[this.props.lang].replace(\n                \":id\",\n                this.props.match.params.id\n              )}\n            >\n              Ödeme Al\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserDetail\n","/Users/erdincmaden/Documents/Other/monk-medical-web/src/CreatePatient/CreatePatient.js",[],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/CreatePaid/CreatePaid.js",["148","149"],"/Users/erdincmaden/Documents/Other/monk-medical-web/src/Expense/Expense.js",["150","151","152","153","154","155"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _ from 'lodash'\nimport DatePicker, {registerLocale, setDefaultLocale} from \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport API, { headers } from \"../utils/API\";\nimport { scrollToTop, currency, formatMoney } from \"../utils/helper\";\nimport InputWLabel from \"../utils/components/InputWLabel\";\nimport { authRoutes } from \"../App/routes\"\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nregisterLocale('tr', tr)\n\nexport class Expense extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      rows: [],\n      hasMore: false, \n      length: 10,\n      currentpage: 1,\n      search: ''\n    }\n  }\n\n  \n  componentDidMount = () => {\n    scrollToTop();\n    this.props.headerTitleSet(this.props.translate('expenses'));\n    this.getData()\n  };\n\n  getData = ()=>{\n    API.get(`Expense/List?searchBy=${this.state.search}&page=${this.state.currentpage}`, {\n      headers: { ...headers, Authorization: `Bearer ${this.props.user.token}`, page: this.state.currentpage},\n    })\n      .then((res) => {\n        this.props.pageLoadingSet(false);\n        const { data } = res;\n        const rows = this.state.rows;\n        data.data.map(e => {\n          rows.push({\n            amount: e.amount,\n            clinicId: e.clinicId,\n            createDate: e.createDate,\n            currency: e.currency,\n            description: e.description,\n            id: e.id,\n            disabled: true,\n          });\n        });\n        this.setState({\n          currentpage: this.state.currentpage+1,\n          rows: rows,\n          hasMore: data.totalPages >= this.state.currentpage+1\n        })\n      })\n      .catch((err) => {\n        this.props.pageLoadingSet(false);\n      });\n  }\n  handleChange = (e, index) => {\n    const arr = this.state.rows;\n    if (!_.isUndefined(e.target)) {\n      if (e.target.name.includes('gider')) {\n        arr[index].description = e.target.value\n      } else if (e.target.name.includes('tutar')) {\n        arr[index].amount = e.target.value\n      }  \n    } else{\n      arr[index].createDate = e\n    }\n    \n    this.setState({\n      rows: arr\n    })\n    \n  };\n  editRow = (x, i)=>{\n    const arr = this.state.rows;\n    arr[i].disabled = false;\n    this.setState({\n      rows: arr,\n    })\n  }\n  editRowSave = (x, i)=>{\n    const data = {\n      \"id\": this.state.rows[i].id,\n      \"clinicId\": this.state.rows[i].clinicId,\n      \"description\": this.state.rows[i].description,\n      \"createDate\": moment(this.state.rows[i].createDate).format(),\n      \"amount\": parseFloat(this.state.rows[i].amount),\n      \"currency\": this.state.rows[i].currency,\n    };\n    this.props.pageLoadingSet(true);\n    API.post(\"Expense\", data, { headers: { ...headers,Authorization: `Bearer ${this.props.user.token}`, } })\n      .then((res) => {\n        this.props.pageLoadingSet(false);\n        const oldData = this.state.rows;\n        oldData.splice(i, 1);\n        this.setState({\n          rows: oldData,\n        });\n        this.getData()\n      })\n      .catch((err) => {\n        this.props.pageLoadingSet(false);\n        this.setState({ isSending: false });\n      });\n  }\n\n  delete = (i) => {\n    const id = this.state.rows[i].clinicId\n    console.log(id)\n    this.props.pageLoadingSet(true);\n    API.delete(`Expense?expenseId=${id}`, {\n      headers: {\n        ...headers,\n        Authorization: `Bearer ${this.props.user.token}`,\n      },\n    })\n      .then((res) => {\n        this.setState({\n          rows: [],\n        },()=>{\n          this.getData();\n        })\n        this.props.pageLoadingSet(false);\n      })\n      .catch((err) => {\n        this.props.pageLoadingSet(false);\n      });\n  }\n  render() {\n    return (\n      <div className=\"Payments\">\n        <div className=\"align-items-center justify-content-between mt-4 mb-4\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Link className=\"primary-button d-inline-flex\">\n                Yeni Gider Ekle\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div>\n          <InfiniteScroll\n            dataLength={this.state.rows.length}\n            next={this.getData}\n            hasMore={this.state.hasMore}\n            loader={\n              <tr>\n                <td>...</td>\n              </tr>\n            }\n            height={600}\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                {/*<b>Yay! You have seen it all</b>*/}\n              </p>\n            }\n          >\n            <div className=\"react-infinite-table react-infinite-table-fill example-table\">\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th className=\"react-infinite-table-col-0\">Tarih</th>\n                    <th className=\"react-infinite-table-col-1\">Gider İsmi</th>\n                    <th className=\"react-infinite-table-col-2\">Tutar</th>\n                    <th className=\"react-infinite-table-col-4\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.rows.map((i, index) => (\n                    <tr key={index + \"a\"} id={\"rowElement\" + i.id}>\n                      <td className=\"react-infinite-table-col-0 pt-3 pb-3\">\n                        <DatePicker\n                          selected={new Date(i.createDate)}\n                          onChange={(date) => {\n                            this.handleChange(date, index)\n                          }}\n                          placeholderText=\"Başlangıç Tarihi\"\n                          className=\"w-100 min\"\n                          showTimeSelect\n                          locale=\"tr\"\n                          dateFormat=\"d MMMM yyyy h:mm\"\n                          disabled={i.disabled}\n                        />\n                      </td>\n                      <td className=\"react-infinite-table-col-1 pt-2 pb-2\">\n                        <InputWLabel\n                          name={`gider${index}`}\n                          type=\"text\"\n                          classes={`mb-0 mw-300 w-100 min ${\n                            i.disabled ? \"disabled\" : \"\"\n                          }`}\n                          value={i.description}\n                          tabIndex={1}\n                          label=\"\"\n                          disabled={i.disabled}\n                          setValue={(e)=>this.handleChange(e, index)}\n                        />\n                      </td>\n                      <td className=\"react-infinite-table-col-1 pt-2 pb-2\">\n                        <InputWLabel\n                        name={`tutar${index}`}\n                          type=\"text\"\n                          classes={`mb-0 mw-300 w-100 min ${\n                            i.disabled ? \"disabled\" : \"\"\n                          }`}\n                          value={\n                            i.disabled?formatMoney(i.amount) + \" \" + currency(i.currency) : i.amount\n                          }\n                          tabIndex={1}\n                          label=\"\"\n                          disabled={i.disabled}\n                          setValue={(e)=>this.handleChange(e, index)}\n                        />\n                      </td>\n                      <td className=\"react-infinite-table-col-4 text-right pt-2 pb-2\">\n                        {i.disabled ? (\n                          <a\n                            className=\"d-inline-flex align-items-center text-blue pl-3 pr-3 cursor-pointer\"\n                            onClick={(e) => {\n                              this.editRow(i, index);\n                            }}\n                          >\n                            Düzenle\n                          </a>\n                        ) : (\n                          <a\n                            className=\"d-inline-flex align-items-center text-blue pl-3 pr-3 cursor-pointer\"\n                            onClick={(e) => {\n                              this.editRowSave(i, index);\n                            }}\n                          >\n                            Kaydet\n                          </a>\n                        )}\n                        <a\n                            className=\"d-inline-flex align-items-center text-pink pl-3 pr-3 cursor-pointer\"\n                            onClick={(e) => {\n                              console.log('asdasdas')\n                              this.delete(index);\n                            }}\n                          >\n                            Sil\n                          </a>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </InfiniteScroll>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Expense\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":9,"column":8,"nodeType":"162","messageId":"163","endLine":9,"endColumn":26},{"ruleId":"160","severity":1,"message":"164","line":13,"column":8,"nodeType":"162","messageId":"163","endLine":13,"endColumn":33},{"ruleId":"160","severity":1,"message":"165","line":15,"column":8,"nodeType":"162","messageId":"163","endLine":15,"endColumn":33},{"ruleId":"160","severity":1,"message":"166","line":17,"column":8,"nodeType":"162","messageId":"163","endLine":17,"endColumn":24},{"ruleId":"160","severity":1,"message":"167","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":15},{"ruleId":"160","severity":1,"message":"168","line":14,"column":7,"nodeType":"162","messageId":"163","endLine":14,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":162,"column":19,"nodeType":"171","endLine":168,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":171,"column":19,"nodeType":"171","endLine":177,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":180,"column":19,"nodeType":"171","endLine":186,"endColumn":20},{"ruleId":"160","severity":1,"message":"172","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":9},{"ruleId":"173","severity":1,"message":"174","line":40,"column":25,"nodeType":"175","messageId":"176","endLine":40,"endColumn":27},{"ruleId":"160","severity":1,"message":"177","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":80,"column":24,"nodeType":"175","messageId":"176","endLine":80,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":73,"column":28,"nodeType":"175","messageId":"176","endLine":73,"endColumn":30},{"ruleId":"173","severity":1,"message":"174","line":96,"column":28,"nodeType":"175","messageId":"176","endLine":96,"endColumn":30},{"ruleId":"160","severity":1,"message":"178","line":4,"column":37,"nodeType":"162","messageId":"163","endLine":4,"endColumn":53},{"ruleId":"160","severity":1,"message":"179","line":11,"column":10,"nodeType":"162","messageId":"163","endLine":11,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":42,"column":25,"nodeType":"175","messageId":"176","endLine":42,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":223,"column":27,"nodeType":"171","endLine":228,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":232,"column":27,"nodeType":"171","endLine":237,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":241,"column":25,"nodeType":"171","endLine":247,"endColumn":28},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'analysesMenuActive' is defined but never used.","Identifier","unusedVar","'doctor_settingsMenuActive' is defined but never used.","'system_settingsMenuActive' is defined but never used.","'clinicMenuActive' is defined but never used.","'alert' is defined but never used.","'allRoutes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'_' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PropTypes' is defined but never used.","'setDefaultLocale' is defined but never used.","'authRoutes' is defined but never used.","no-global-assign","no-unsafe-negation"]